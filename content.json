{"pages":[{"title":"About","text":"Name: Willin Wang Birth: June,1989 Sex: Male Location: Nanjing, China Position: CTO Follow MeQQ: 2539929 GitHub: https://github.com/willin Weibo: https://weibo.com/willinx Writings 《不可替代的团队领袖培养计划》 《从 0 到 1 掌握 Hyperapp》 欢迎您! 我是**王之琳 Willin Wang**。位于南京市·浦口区。生日 89 年 6 月，男。生下来是个胖子，长成了瘦子，现在又变成了胖子…… 目前从事技术总监、架构师。 毕业于金陵科技学院 NIIT 专业，是认证的企业系统工程师(DNIIT Enterprise Systems Engineer)和面向对象应用开发者(NIIT Object Oriented Application Developer)。 说到编程吧，其实我起步很早，从小学就开始学习 Turbo Basic，Quick Basic，然后 Visual Basic 什么的。我的第一个网站是在高中时期搭建的，用的域名是 best02.cn。后来我得到了最喜欢的域名 Agean.com.cn，但是由于有段时间不许个人注册.CN 域名了，我便放弃了它。现在这个域名 Willin.org 是 09 年 10 月注册的。 旧文章归档：QQ 空间 Hi! My Name is Willin Wang (Wang Zhilin in Chinese). Now located in Nanjing, China. Born in June 3rd,1989 at a small hospital of Haian, Jiangsu Province, China. When just born I was a fatso. Long days after being slim, I am a fatass again now… Now I’m working as a CTO, Architecture. Graduated from Jinling Institute of Technology (Major in NIIT Software Development), Certified DNIIT Enterprise Systems Engineer and NIIT Object Oriented Application Developer. I start learning programme at about 6 years old, with the Turbo Basic, then Quick Basic, Visual Basic. In senior high school, I built up my first Website with the domain Best02.cn. My favorite is Agean.com.cn but for a time .CN domain was not available for personal use, I gave it up. Willin.org was registered at Oct, 2009.","link":"/about/index.html"},{"title":"Feeling","text":"关于公益自 2010 年 11 月至更新这篇日志（2016.01.02），已在腾讯公益月捐网站为壹基金捐赠60 个月，总计600 元，参与公益活动2 个，为筑力计划捐赠微爱梦想35 个，总计136.5 元。在新浪微博微绿活动中捐款10 元，以及通过淘宝公益商品等方式献出了一份份公益爱心。 但由于个人能力有限，希望聚各位基友的爱心，为公益献出一些力量。 关于个人公益与作品开源关于我的个人公益计划，现在还处在萌芽阶段，只为尽微薄之力来推动互联网发展的浪潮。 第一步计划便是作品开源（私人定制作品将遵守保密协议，不对外公开。），如果你对我的作品、技术文章、我的公益计划或者对我这个人感兴趣，或者我的这些作品、文字能够给你些许启发或是一些灵感，再又或感到慷慨愿意为我的愿望清单实现助一臂之力，希望你能对我进行捐赠。现接受支付宝（Alipay.com）人民币和贝宝（Paypal.com）美元的支付，支付链接在每篇文章的版权信息后。 所有开源项目将挂载在：Google Code、GitHub 和 msdn 代码库 。 About Public WelfareEver since Nov. 2010, by the time (Dec 18th, 2014), I have donated to the One Foundation for 60 months, RMB 600 in total, taken part in 2 Welfare Activities and have donated to 35 Micro Dream Projects on Tecent Welfare NPO, RMB 136.5 in total. Besides, I have donated RMB 10 in Sina Weibo Micro Green activity, through Taobao Pulic Walfare Productions, and through other methods, just to make my little love spread. I have a plan to start another monthly donation project, but that I am limited becourse an individual’s power is not strong enough. That’s why I hope everyone to be generous and give a little love. About Personal Public Welfare and Open Source WorksMy personal public welfare project have not been launched yet, but I hope I can make it improve the Internet Development. The First Step: I will make my works open source (except Privite Projects). If, you are interested in my works, my posts, my welfare plan or my own, or if you come up with a creative idea through my posts or my works, even or if you feel generous and you are willing to help me make my wishlist come true, Please donate for me. Now Paypal and Alipay is available. Donation link will be presented following each post content. All of my Open Source Projects will be waiting for you at Google Code, GitHub (Thx GFW suspended) and msdn . 鸣谢（按捐赠排名） 詭異森林 -RMB ￥ 8.00 Lazynight -RMB ￥ 5.00","link":"/feeling/index.html"}],"posts":[{"title":"道不尽、流年——二十周岁感言","text":"我 21 岁了，不仅未能顶天立地，甚至还没找到属于自己的位置。 总结这 20 年，主要是生活、爱情、事业三个方面。 【生活】以前乱糟糟、现在乱糟糟。但好了许多。 可能有了些小洁癖，开始爱干净了，但还是不会打扮自己、也没打算。有的时候把自己的地方整理的干净、整齐。或许坚持不了多久，但隔一段时间就会觉得自己太没条理，又整理一遍。 老朋友的联系少了，但还会经常想起。 新朋友的关系远了，不敢轻易去相信。 有的时候想要无私地去为他人或者学校做些什么，却不会有人相信、甚至还会有无耻的人拿我的思路用于商路。 胆子似乎变小了，没有什么勇气了。曾经的霸气已经被人遗忘了。 对于功利的渴求，日益剧减。平静地接受当下的工作，如校学生会秘书部。院副部竞聘、校级其他部门部长、副部长竞聘我都没有参加，也有人问起，我说我在秘书部好好的干吗要走？我走了工作丢给谁？ 或许好多人活着就是为了向上爬，一有新的机遇就要拍拍屁股走人。这样很好，很实际。我想这点是我不好，太碌碌无为了。 但我并不是甘于平庸的人，我追求平淡，却有着明确的理想。 毕竟这是生活，人人都要选择自己的路。我无法左右别人、努力把握好自己，并坚定地承担起自己的责任。 值得庆幸，虽然我依旧多愁善感，但开朗了许多，不让自己显得脆弱。 I can. Just smile. 【爱情】“普遍撒网、重点捞鱼。”我听了两次。 妹看我写的文，说我肯定是个爱浪漫的人。我笑笑。她对我说“一表人才，风流倜傥，文采出众，怎么着也要找个秀外慧中的漂亮 MM 呀！” 我一直觉得爱情是很神圣的。如姜太公钓鱼，愿者上。可是我发现我近来也有撒网的倾向。 一直以来，我都没有什么女性的朋友，点来点去就只有干妹妹和燕子，很纯净的友情。 我觉得也挺好，至少免除了未来恋人吃醋的烦恼。 但是却完全不会和异性交流。 到了大学，在身边的女孩子似乎多了许多。但没一个是恋人关系。 一直在寻找另一半，还不知道谁才是适合我的，也不知道谁会来关心我。但我相信，只是目前。 我不像以前那么规避与女生接触了，但我感觉并不好。把握不住分寸，不懂说什么会太过分。我一直不喜欢拿感情来开玩笑，但似乎现在也就拿手这一套了。细想想，我真够猥琐的。 我想我现在是在远离幸福。爱情应该坦诚、专注。无需我刻意去强求。感情应该是宁缺毋滥的，一个人有何可怕？要长久的爱情，就绝不能随随便便。 我还是一个人。我明白我还不够好。 但我会等待，一个人，让我珍惜、珍惜我。 To have and to hold,to love and to cherish. For just one girl,and For good. 【事业】我不是廉价的劳动力，也不是一个人工作的机器。 我想钻研、深入地去研究一些东西，也想要一个可以合作、配合的团队。我也有许多商业的想法和思路、想要付诸实践，但我不会轻易再对谁说出来。 常有人问：凭你的能力，凭你老爸的人际关系，还怕没有工作？ 我想学一些前沿的东西、专业的深入的东西，有时候很力不从心。无论从事 NIIT，或者 Web2.0 开发，都不是一个人的事情。或许可以依赖外包，但外包也是一个团队去做，很少有一个人就能扛得起的。 我找不到合作的伙伴，没有 Team 固然也没有 TeamWork。或许现在还很年轻，很多人都不懂团队的意义，但是我觉得起步已经太晚。中国的 IT，起步也太晚。 学一些软件的时候，我总是和我的舍友说，什么是最新、什么是最前沿、什么科技含量最高、什么有发展前景……除了劝服他们换上了最新的操作系统和 Office，貌似他们并没有接受其他。Adobe CS3 太老了，我说我用的 CS4，他们换上了。但我现在只用 DreamWeaver 了，因为 Flash 成本太高、PhotoShop、FireWorks 不能用于团队而且可以用几句简单的代码实现。我想 4 个人组成一个小团队还是可以的，一起学习一些前沿的东西，一起发展，一起做一番项目。可晚上、看 Song 还在继续学 Flash，班长也在看 Flash 的书、Lee 看些杂七杂八的。 我不管他们是否相信，我看 IT 虽然谈不上权威，但绝不会有太大偏差。他们学出多大本事、做出多大项目、获得多少价值，与我无益。但我还是希望有一些人相信我的话、也希望多一些志同道合，我没考虑过我自己能获得多少利益，但我还是希望有一个 Team，相互促进，相互帮助。即便 Team Over，也能收获许多。 我想如果我以后搞钻研的话，我不会待在国内，国情不允许。如果我留在过年，我会从商。 我不做奸商。 但是谁想要利用我的话，我不会给他任何甜头的。我知道中国“盗版”很厉害，侵权的事做得也很绝。我想我已经感受不少了，还好摊上的早，我也慢慢学会适应了。在这点上我得申明，我做人不会这么下贱。我的所有思路，都将来自我自己，或者是通过授权或购买。我鄙视剽窃、更鄙视没有思想只能通过下贱手段谋取暴利的，那不是商人，是狗。 没什么明确目标，但我知道方向。世界瞬息万变，我会找到自己的位置。无论在哪、在什么位置，我都会把自己的工作做好。 【总结】不求做伟大的人，却要做大写的人，这就是我。","link":"/posts/2009/20th-birth/"},{"title":"照无眠、荏苒——二十二周岁碎念","text":"也许我看着很牛 B，或者装着很牛 B，其实很 SB。我不想为自己辩解什么，其实我很庸俗，甚至可以说，是恶俗。 【生活】不知不觉，又到了离别的季节，或许说再见，就再也见不到面。有些难过，但我一定得离开。“再多各自牛 B 的时光，也比不上一起傻 B 的岁月。”但是傻逼 B 的岁月就这么离我而去了，虽然我依旧那么执念，那么幼稚。 日子久了，自身的缺点慢慢突显，其中有三点尤为致命。 不能够善始敬终。开学初的时候还坚持定期打扫整理，现在桌上已经有些凌乱。溜冰鞋在宿舍里睡了两年了，说要学吉他也有一年都没有再动它。还想学法语，但也至今还没有开始。对于明天，也总是没有计划，今朝有酒今朝醉。不会理财，无论生活费或是赚了多少都会在月底前花光。一旦事情多了，生活就会没有规律。不能按时睡觉，也不能按时吃饭。当然，也一直没有坚持锻炼，所以身体徘徊在亚健康、或亚健康的状态。 我希望离开了学校以后能够把锻炼身体的事情坚持下来，毕竟，只有好好地活着，才能考虑什么有意义。然后，还要带着学习法语，不仅是为了兴趣，如果可以的话，以后可能还可以移民到魁北克或者瑞士。小时候一直梦想着有一天能够到瑞士去，哪怕只是转一圈。如果比较闲的话，把其他好好学学，看视频里弹《加勒比海盗》主题曲的那个孩子，简直无比的羡慕嫉妒恨啊~ 倔犟、固执。典型的程序员性格，从来不遵从逻辑。因为我们都可以自己创造所有的逻辑。认为对的就是对的，认为错的谁也不能把它说成对的。有的时候会听不进意见，更有的时候会将坏脾气转移到不相关的人身上。 我脾气一直很差，不好相处。太直率，我会把对人的厌恶非常直截了当地摆在脸上。或许这是个缺点，也或许这是个优点。我不会圆滑，我只是想做我自己。当然，我知道这种想法很幼稚，但是很庆幸我始终没有丢了自己。但是一直以来，我经常控制不住我的坏脾气，我会经常生气，有时候暴跳如雷。 脾气是该好好改改，但原则是不会改的。我不希望有一天，我发现不知道自己在扮演的谁。那是多么悲哀的一件事啊~ 一副空皮囊。探求真理的人不可心存傲慢，但是我骨子有一种自负。我会的其实并不多，但是我总是觉得我能够做最好的。我希望所有人都认同我，至少，尊重我。但其实我只是一副空皮囊，我不仅没有足够的实力，更没有足够的勇气。即使我用大声的吼叫，也不能减轻我内心的胆怯。我最害怕，就是得不到尊重。 真正肚子里有货的人，会无所畏惧。我有许多敬佩的 Hackers（不是 Crackers），也很欣赏那些开源的贡献者。有的时候，我害怕别人比我强，还是因为怕得不到尊重的缘故吧。我怕自己头脑里的东西被人窃取，这样，我就会消散在别人的视线里。 说到底，我还是应该武装自己，用知识，更要用人品。还有很长的路要走。我不够自信，也不能承受挫败。我需要接受更多的磨砺，才能真正变得锋利。 【事业】我说过，我不是廉价的劳动力，也不想成为一个赚钱的机器。所以我在做项目的时候，带着很重的个人情绪。 我工作不是为了赚钱。所以或许我不能够赚很多的钱，或许我不能够有很广的业务面。或许因为我还在花家里的钱，还没有到需要养活自己的份上。我只希望用工作来赚自己的价值，来换面子。我不愿意做吃苦、受累、收益少的工作。眼高手低？或是只是满足自己的虚荣心？ 关于创业，一直有许多想法。但是连家里的支持都得不到。或许我还是太嫩了。妈妈一直想我留在连云港工作，拿一份大约每月只有一千到两千的工资，过着安稳平庸的生活。只要简简单单的活着，她就会很满意，她不指望我养着，更不希望我承担风险。 但是这个世界是到处有风险需要承担的。我希望我能够出去锻炼锻炼，毕业以后再回到连云港。毕竟这也是我与兄弟们的承诺。无论在哪、在什么位置，都应该把自己的工作做好，这才是最重要的。 渐渐发现，或许我并不适合从商，虽然我觉得我头脑是足够用的。做一个程序员其实没有什么不好，虽然很容易老，但趁我还年轻。以后再考虑转行的事宜反正不会迟。 【爱情】够了领证的年龄了，但是还没有愿意跟我一同去领证的人儿。我自我感觉良好，至少会修电脑。可是已经好久没有姑娘中意我了……我不知道是我个人魅力衰退了，还是我根本没有什么魅力。 可能是太久没有写文字的原因，现在写出来的文字都很蹩脚，甚至连自己都打动不了。我开始着急了，我是个害怕孤单的人，想有一个人关心我。 前几天把高中喜欢的女孩儿扔进黑名单里了。其实原因很简单，就是回了一条关心的评论，然后被嘲讽了又相互嘲讽一番。后来由于系统原因还是收到了一条她的新状态，说不想骂我，贱人，神经病一类字眼。并且还获得了许多她朋友的苟同。即使早已不再爱，心里仍不禁委屈万分。 多么深的一道伤啊。几年前，我追了她整整一个月，她在圣诞节的那天接受我，说因为被我感动而和以前的男朋友分手。但我一直却不知道她有男朋友。这是一个老故事了，听过的人很多，或许两个当事人都在对此事做出描述的话，会有不同的情节。但我确定，她欺骗了我的感情。后来想想，很庆幸她在一周后就背叛了我。我其实一直没有怪她。因为我觉得我不够好，至少我还是个穷小子。 还好现在我有能力自己赚钱了，可以很大方地请朋友吃饭，花自己赚的钱。至少我不同了，我进步了。我不反对女孩子拜金，但是起码你应该会尊重人吧。也还好，我从来不觉得有什么亏欠她，该给的真心我也给了，当我自己面对破裂的心，我不会觉得内疚。也不想相互攻击或者继续去记恨，只想别再有任何交集其实就很好。 不过是被辜负而已。我虽然对自己这么说，但心里还是会觉得很凄凉。 我还是一个人。我明白我还不够好。但我会等待，一个人，让我珍惜、珍惜我。To have and to hold,to love and to cherish.For just one girl,and For good. 【总结】不求做伟大的人，却要做大写的人，这就是我。","link":"/posts/2011/22nd-birth/"},{"title":"理还乱、浮沉——二十三周岁反思","text":"Shown off, Shone out.想自己闪耀，就得想到燃烧殆尽的那一刻。 A bit blundering, then a bit elbowed.每一丝浮躁，都会换来一丝排挤。 【生活】想着成为大伙中不可或缺的一份子。一但表现得激进，便会被厌恶；一但表现得拘谨，便会被冷落。我努力想做好自己，为了得到大家的认可，但始终在背道而驰。或许，是因为，连我自己都还没有认可。 我曽分析过自己在生活上有三点非常致命的问题：1、不能够善始敬终。2、倔强、固执。3、一副空皮囊。解决了一些问题，又出现了一些问题。又仔细地想想，分析的问题也并不十分到位。重新总结了两个： 坚持自己应该坚持的，放弃自己应该放弃的。有原则没错要坚持，不是什么都有必要坚持到最后，也不是所有执念坚持了就会有好的结果。所以应该会取舍，当机立断。经历过无谓的坚持惹来的麻烦，才知道犹豫不决，会造成多大的烦恼。倔强、任性是小孩子专有的权力，犹豫、固执是大笨蛋共有的特色，太计较得失只会让自己活得太累。 心理素质迫切有待提高几乎所有问题，除了由于选择的错误，都是由心理因素引起的。 首先得说最差的一点体现，是——浮躁。浮躁是指轻浮，做事无恒心，见异思迁，不安分守己，总想投机取巧，整天无所事事，脾气大。虽然上述词典的解释有些过于贬低，但大多数形容都可以挂牌在我身上。 荣辱之责，在乎己而不在乎人。患得患失，畏首畏尾，不能够泰然自若地面对所有的问题，不仅让我身边的人也受到影响，同时也使得我脾气更加暴躁。 一直以来，我觉得我的脾气在一次次受伤后被抚平，但实际上不是。只是对伤痛麻木，磨平了锐气。内心的孤傲与日俱增，以至于现在连开心都觉得是件很奢侈的事情。 最近看有一句话说：决定你人生高度的，不是你的才能，而是你的态度。所以，我决定，改善生活，从改变态度做起。 【事业】不知不觉，正在经历着一次重大的转变。一直以来，钻研的都是前台与后台的中间交互，现在却在研究后台与数据库的交互。一直以来，主要用的是.net + ms sql，偶尔搭一些 php + mysql，现在又涉猎 J2EE 和 Oracle。人生也算完整了，三大主流 web 语言全部所有染指了。 我曾经说过，我不是廉价的劳动力，也不是一个人工作的机器。 但是那时候，我不知道一个词，叫做公益(Public Welfare)，也不知道一个词，叫做开源(Open Source)。在学校的时候，我大多数时候接各种大小项目，最后除了赚了点钱，没其他什么收获。赚钱干了什么都？吃饭、吃饭、吃饭，胖得跟猪一样。硬盘里已经放了 8Gb 我写的代码，想来我这前半生所写代码行数应该可以用亿计量了。我的进步非常地缓慢，能有今天这样的成绩，顶多算是因为笨鸟先飞。但其实我看到，大多数码农跟我一样的处境。我不认为我是一个优秀的程序猿，但我愿意引导其他人成为，让我们国家的信息技术得以飞跃，所以我把我的作品开源，让代码如诗。 一直也在提团队，我也曽试图管理一个自己的团队，但已经失败了好几次了。我也加入过几个团队，发展得也并不尽如人意。团队精神的一个重要环节是交流，正好好在我的交流能力很差，有的时候会拖团队的后腿。 总体来说，我觉得我的能力值不低，但是我实现的价值不高。空有学识五车，倒不是因为没有伯乐之才，而是因我态度不够端正。比技术更需要掌握的，是所接触的业务和与团队的合作。 【爱情】 To have and to hold from this day forward. For better, for worse, for rich, for poor, in health, and in sickness. To love and to cherish, till death, do we part. 分开事小，纠缠乱大。 我一直想要的爱情，很简单。付出一颗心，收获一颗心，别无他求。 前一段感情，当我付出了一颗心的时候，收获了空欢喜。当终于那么一天心消耗殆尽，痛下决心放弃，收获了更大的伤心。该珍惜时不珍惜，错过了便不会有机会再重新来过。这简单道理谁都应该知道，但是她却给我的生活带来了一道道额外附赠的创伤。 反反复复，重来了又还。没有谁走入我的世界，融入我的生活，便悄然离开了。 下一段感情，我不知道该如何去设想。终于发现，诚如姜太公钓鱼，不是为了等愿者上，而是因为我没有鱼饵。我期待，到无奈。从未曽被捧在掌心，虽然我知道这样并不该，但至少，珍惜。 站在幸福的门外，心里住着爱，但我却感觉空得慌。但…… 我还是一个人。我明白我还不够好。但我会等待，一个人，让我珍惜、珍惜我。 To have and to hold,to love and to cherish.For just one girl,and For good. 大德无言，大爱希声。其实还有很多话没有说出来，那就留在岁月中，接受时间的洗礼吧。 【总结】经各方面反思，发现我还没有什么过人之处能被人挖掘。差到如此，还有什么能更差的呢？所以不如开开心心过好以后的每一天。 不求做伟大的人，却要做大写的人，这就是我。","link":"/posts/2012/23th-birth/"},{"title":"qTranslate插件日期乱码的解决方案","text":"当我在 Wordpress 3.4.2 版本下安装了 qTranslate 插件之后，发帖时候的日期格式变成了乱码，没有被解析出来: Posted on %e de %B de %Y by Willin 翻看了外国一些论坛找到了一个解决方法: 编辑 qtranslate_utils.php, 从第 143 行中找到: $date_parameters[] = '#%#'; $strftime_parameters[] = '%%'; 修改成: $date_parameters[] = '#%#'; $strftime_parameters[] = '%'; 插件设置里，依然采用第一个，date()模式，不要改成 strftime()或其他什么的。 相关资源 官方论坛 http://www.qianqin.de/qtranslate/forum/viewtopic.php?f=3&amp;t=1573&amp;p=5988#p5988 包括了解决方案。","link":"/posts/2012/qtranslate-date-formatting/"},{"title":"离别赠言·给连云港电子口岸的发展建议","text":"从六月份来到 EDI，到九月份离开，仅有短暂的三个月时间。感谢领导，和各位同事，在这段时间里，给与我的照顾与教诲。常言道，言多必失，少说话多做事。但就要离开了，我想把这段时间总结的一些心得建议反馈给领导，仅代表个人的意见，望领导能批评指正。 【长期发展建议】 一、能集成，不独立。 二、走“SaaS”服务模式（与现有的 SaaS 模式略有不同）的路线（向云计算靠拢）。 三、提高服务系统的性能、安全性、用户体验等。 【一、集成与独立】当公司经手的独立项目数量越多，运营维护就会越来越困难，维护的成本升高那么利润就会降低。 当几个独立的系统相关性、粘和度较高，集成的优势体现在： 代码维护 量减少。 数据冗余 量减少。 易于产品化，SaaS 化。 ☆ 我公司虽有 EDI 中心之名，也有很深的 EDI 技术基础，但有一些时候（比如，几个需要交互的系统都为我们公司所做，并且所用的数据库表结构相同），可以将系统集成为一个大系统，或者将涉及到的模块整合，共用，减少报文发送接收和入库的相关处理，可以一步到位。 【二、SaaS】我个人理解云平台，就是将多个小系统集成、优化，整合成一个大系统，放入云端中，通过对每个用户设置不同的权限，来使其能够进行多种业务的操作（每个业务对应的子系统，也可以看成是功能模块）。所以[云]这个概念，除了分布式一大特点之外，我个人认为，“高度集成”也是一大主要显著特征。云，可以看成是一个大的系统，所有的子系统都只是大系统其中的一个模块（举例：Discuz 插件平台）。 虽然公司现在也是以 SaaS 服务提供商身份对外提供服务，但相对零散。个人总结三点针对点： 一、复用性 将可复用的代码封装。 二、通用性对于 Saas B/S 结构系统主要为浏览器兼容性。 应当采取的对策是：针对主流，向下兼容。 符合 W3C 规范，不能以 IE 6，7，8 作为重点，IE9 和其他浏览器反而不能很好支持。 ####三、适用性 将可复用的业务功能块集成合并。尽量避免相同的功能在不同的相关系统中重复。 系统结构应当简洁明朗，并且运行速度不能太慢，报错几率不能太高，导致宕机或间歇瘫痪几率不能太高。 【三、性能、安全性、用户体验】一、性能优化现状：下午 4-5 点业务量大时，服务器间歇瘫痪。 改善手段： 使用缓存，减少数据库连接。 数据库操作优化：优化 SQL 语句，合并页面中的多个查询等。 二、安全性优化现状：受以前系统的开发习惯影响，存在诸多 SQL 注入、跨站攻击、文件上传的漏洞。 若以后贸易市场等系统开放了在线支付接口，存在很大安全隐患。 三、用户体验现状： 界面风格不统一。 浏览器兼容性差。 ☆ 用户体验是吸收用户的重要指标之一。 【总结】由于我对港口业务的了解不是很深，所以没有太多从业务角度去分析，确实对业务的理解比技术的实现更加重要。公司中对于港口业务熟悉的同事有很多，而且也有技术高的同事，能够将技术融入到业务过程中去。最后，祝公司越来越壮大！ 于 2012.9.19","link":"/posts/2012/to-lyg-eport/"},{"title":"Unix时间戳(Unix timestamp)学习笔记","text":"如何在不同编程语言中获取现在的 Unix 时间戳(Unix timestamp)？ Java time JavaScript Math.round(new Date().getTime()/1000) getTime()返回数值的单位是毫秒 Microsoft .NET / C# epoch = (DateTime.Now.ToUniversalTime().Ticks - 621355968000000000) / 10000000 MySQL SELECT unix_timestamp(now()) Perl time PHP time() PostgreSQL SELECT extract(epoch FROM now()) Python 先 import time 然后 time.time() Ruby 获取Unix时间戳：Time.now 或 Time.new 显示 Unix 时间戳：Time.now.to_i SQL Server SELECT DATEDIFF(s, '1970-01-01 00:00:00', GETUTCDATE()) Unix / Linux date +%s VBScript / ASP DateDiff(\"s\", \"01/01/1970 00:00:00\", Now()) 其他操作系统 (如果 Perl 被安装在系统中) 命令行状态：perl -e \"print time\" 如何在不同编程语言中实现 Unix 时间戳(Unix timestamp) → 普通时间？ Java String date = new java.text.SimpleDateFormat(\"dd/MM/yyyy HH:mm:ss\").format(new java.util.Date(Unix timestamp * 1000)) JavaScript 先 var unixTimestamp = new Date(Unix timestamp * 1000) 然后 commonTime = unixTimestamp.toLocaleString() Linux date -d @Unix timestamp MySQL from_unixtime(Unix timestamp) Perl 先 my $time = Unix timestamp 然后 my ($sec, $min, $hour, $day, $month, $year) = (localtime($time))[0,1,2,3,4,5,6] PHP date('r', Unix timestamp) PostgreSQL SELECT TIMESTAMP WITH TIME ZONE 'epoch' + Unix timestamp) * INTERVAL '1 second'; Python 先 import time 然后 time.gmtime(Unix timestamp) Ruby Time.at(Unix timestamp) SQL Server DATEADD(s, Unix timestamp, '1970-01-01 00:00:00') VBScript / ASP DateAdd(\"s\", Unix timestamp, \"01/01/1970 00:00:00\") 其他操作系统 (如果 Perl 被安装在系统中) 命令行状态：perl -e \"print scalar(localtime(Unix timestamp))\" 如何在不同编程语言中实现普通时间 → Unix 时间戳(Unix timestamp)？ Java long epoch = new java.text.SimpleDateFormat(\"dd/MM/yyyy HH:mm:ss\").parse(\"01/01/1970 01:00:00\"); JavaScript var commonTime = new Date(Date.UTC(year, month - 1, day, hour, minute, second)) MySQL SELECT unix_timestamp(time) 时间格式: YYYY-MM-DD HH:MM:SS 或 YYMMDD 或 YYYYMMDD Perl 先 use Time::Local 然后 my $time = timelocal($sec, $min, $hour, $day, $month, $year); PHP mktime(hour, minute, second, day, month, year) PostgreSQL SELECT extract(epoch FROM date('YYYY-MM-DD HH:MM:SS')); Python 先 import time 然后 int(time.mktime(time.strptime('YYYY-MM-DD HH:MM:SS', '%Y-%m-%d %H:%M:%S'))) Ruby Time.local(year, month, day, hour, minute, second) SQL Server SELECT DATEDIFF(s, '1970-01-01 00:00:00', time) Unix / Linux date +%s -d\"Jan 1, 1970 00:00:01\" VBScript / ASP DateDiff(\"s\", \"01/01/1970 00:00:00\", time)","link":"/posts/2012/unix-timestamp-notes/"},{"title":"IIS环境下PHP重写设置(支持中文参数)","text":"在网站根目录下加入: Web.Config: &lt;?xml version=\"1.0\" encoding=”UTF-8″?> &lt;configuration> &lt;system.webServer> &lt;rewrite> &lt;rules> &lt;rule name=\"cnUrl\" stopProcessing=\"true\"> &lt;match url=\"!^(index\\.php|images|assets|robots\\.txt)\" /> &lt;action type=\"Rewrite\" url=\"cnurl.php\" /> &lt;/rule> &lt;rule name=\"Default\" patternSyntax=\"Wildcard\"> &lt;match url=\"*\" /> &lt;conditions> &lt;add input=\"{REQUEST_FILENAME}\" matchType=\"IsFile\" negate=\"true\" /> &lt;add input=\"{REQUEST_FILENAME}\" matchType=\"IsDirectory\" negate=\"true\" /> &lt;/conditions> &lt;action type=\"Rewrite\" url=\"index.php\" /> &lt;/rule> &lt;/rules> &lt;/rewrite> &lt;/system.webServer> &lt;/configuration> cnurl.php: &lt;?php if (isset($_SERVER['HTTP_X_ORIGINAL_URL'])) { // IIS Mod-Rewrite $_SERVER['REQUEST_URI'] = $_SERVER['HTTP_X_ORIGINAL_URL']; } else if (isset($_SERVER['HTTP_X_REWRITE_URL'])) { // IIS Isapi_Rewrite $_SERVER['REQUEST_URI'] = $_SERVER['HTTP_X_REWRITE_URL']; } else { // Use ORIG_PATH_INFO if there is no PATH_INFO (!isset($_SERVER['PATH_INFO']) &amp;&amp; isset($_SERVER['ORIG_PATH_INFO'])) &amp;&amp; ($_SERVER['PATH_INFO'] = $_SERVER['ORIG_PATH_INFO']); // Some IIS + PHP configurations puts the script-name in the path-info (No need to append it twice) if (isset($_SERVER['PATH_INFO'])) { ($_SERVER['PATH_INFO'] == $_SERVER['SCRIPT_NAME']) ? ($_SERVER['REQUEST_URI'] = $_SERVER['PATH_INFO']) : ($_SERVER['REQUEST_URI'] = $_SERVER['SCRIPT_NAME'] . $_SERVER['PATH_INFO']); } // Append the query string if it exists and isn't null (isset($_SERVER['QUERY_STRING']) &amp;&amp; !empty($_SERVER['QUERY_STRING'])) &amp;&amp; ($_SERVER['REQUEST_URI'] .= '?' . $_SERVER['QUERY_STRING']); } require(\"index.php\"); 支持 IIS 环境下跑各种开源 PHP 项目，如：Wordpress、Emlog、Typecho 等。","link":"/posts/2012/iis-php-rewrite-config/"},{"title":"Marathon Tool 汉化版，基于时间的SQL盲注工具","text":"介绍此为 Marathon Tool 盲注工具汉化版，源码开源，原作者：Daniel Kachakil 、Chema Alonso、Alejandro Martín。 汉化：Willin Wang，仅供交流。 下载地址：marathontool.zip (中/英两个版本) 调试环境： Visual Studio 2012， VB.net (4.5 推荐)，无需数据库。 目标框架：.net framework 2.0。 源码下载：http://code.msdn.microsoft.com/Marathon-Tool-c2e0f4a4 项目介绍 Marathon Tool 是一款基于时间的 SQL 注入工具。支持 Microsoft SQL Server, Microsoft Access, MySQL 或 Oracle Databases. 支持特性: 数据库摘要获取 SQL Server, Oracle, MySQL 数据获取 Microsoft Access 97/2000/2003/2007 参数注入 GET / POST SSL 支持 HTTP 代理 授权: Anonymous, Basic, Digest and NTLM 其他 参考盲注资料 http://technet.microsoft.com/en-us/library/cc512676.aspx","link":"/posts/2012/marathon-tool/"},{"title":"CodeIgniter邮件SMTP发送响应超时配置解决方案","text":"问题本地环境配置 QQ 企业邮箱的 SMTP 后，发送邮件的时候总是一直在等待等待，没有响应。用 php 函数发送的时候则是瞬间完成。在网上找了一下，发现了有类似的问题，提示为： **Fatal error: Maximum execution time of 60 seconds exceeded in xxx ** 即执行超时。是由换行符导致的错误。 解决方法$config['newline'] = \"\\r\\n\"; $config['crlf'] = \"\\r\\n\"; 将配置文件中加入以上两个配置属性。 英文论坛原文：http://ellislab.com/forums/viewthread/88690/ I concur with Soar. I was having that Max execution time probleme when trying to send email through SMTP using a Windows 2008 server with MailEnable. I then change my parameters and used my FC6 Unix server with Exam as the MTA and it worked right away. EDIT: I added these 2 lines: $config['newline']=&quot;\\r\\n&quot;; $config['crlf']=&quot;\\r\\n&quot;; and it started working right away with my Windows server.","link":"/posts/2012/codeigniter-smtp/"},{"title":"AJAX U Need 2 Know (AJAX常见误区整理)","text":"CORRECT your BAD habits on AJAX development为了更好的用户体验和系统性能。本项目所有 AJAX 示例代码基于 jQuery 1.8.3。 示例一：基于表单不要直接使用 button 按钮的 onclick 点击事件。(那浏览器禁用 JavaScript 了的话怎么办呢？) 示例二：含广告页面当页面中含有 Adsense 等 js 广告的时候,最好的方法是用符合 W3C 规范的 object 容器包裹. 示例三：PJANPJAN= HTML5 PushState + AJAX + JSON. 系统截图 演示项目环境：Visual Studio 2012 / .NET Framework 4.5 / MVC 4 纠正你的 AJAX 开发习惯。欢迎交流。 MSDN：http://code.msdn.microsoft.com/AJAX-U-Need-2-KnowAJAX-ef2df43f Last Updated: 2012-12-11","link":"/posts/2012/ajax-u-need-2-know/"},{"title":"保护你的WordPress，隐藏真实评论Meta信息","text":"隐藏 Wordpress 评论的真实 ip 和 user agent 信息 代码位置:wp_includes/comment.php 所属方法:wp_new_comment 行号:1390-1391 源代码$commentdata['comment_author_IP'] = preg_replace( '/[^0-9a-fA-F:., ]/', '',$_SERVER['REMOTE_ADDR'] ); $commentdata['comment_agent'] = substr($_SERVER['HTTP_USER_AGENT'], 0, 254); 之后添加if($commentdata['user_id']==1){ //一般情况admin的id是1，情侣博客加个或等于2即可 $commentdata['comment_author_IP'] = '1.1.1.1'; //我会告诉你我填的什么吗 $commentdata['comment_agent'] = 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1';//我会告诉你我填的什么吗 }","link":"/posts/2012/wordpress-comment-meta-info/"},{"title":"梦想清单8号：王之琳Willin","text":"给捕梦者的投稿： 1.建立一个家找一个能够相亲相爱的人，一起过完一辈子。 2.在家工作，经常出去旅游当然，如果能不工作就养家最好，但这不现实，还好我学的这行对工作地点没有要求，哪里有网，哪里就是我的办公室。 3.通过自己的努力，买辆兰博基尼虽然这一条是可有可无的奢侈追求，但人要为自己的话负责。儿时吹的牛 B，也是得兑现的。 4.实现自己的价值作为一个抱着键盘长大的孩子，我一直对电脑充满了热情。我也曾以为我会一直从事这一类的工作，但是经常坐在电脑前让我觉得在慢慢提前死亡。所以我希望在年轻的这几年内做些成果出来，实现我对 IT 的价值，然后转型。 5.帮助未来的她实现她的梦想谁都有自己的理想，我以前总是很自私地想要取得这个成绩那个成就。如果我有足够的时间，我想这些都是很容易获得的。但我的生命不只属于我自己，还有我的亲人，爱人。我现在没有其他什么奢望，我的理想就是协助她，实现她的理想。 6.出版几本不同类别的书我一直想当一个作家，曽自诩为写代码的诗人。我有一本没写完的自传体小说《真惜 CheriShe》，虽然搁置了很久，但在未来的日子里，会慢慢把她写完。目前正在写一本 AJAX 技术的教程。 7.陪父母走完他们苍老的年岁父母在，不远行。可能未来肩上承担的是一家三口，外加 4 个老人。我希望能让操劳一生的爸妈安享晚年，并让他们认可我的成就，以我为荣。 8.教育一个自立、自信的孩子有的时候我觉得自己很失败，很难与人相处，很难克服困难，不自信，不能坚持。我希望我的孩子在这点上不要像我，我不会只重视文化的教育。更重要的，是要他做一个正直而大写的人。 P.S.本文写于 2011 年初。","link":"/posts/2013/dream-list/"},{"title":"北京，我将要离开你。挥别66脑","text":"其实我不怎么喜欢北京，不是因为北京的人情不好，而是这里的环境太恶劣了。自从来了这里，每天都是在拉肚子中度过，每次刷牙都是满嘴的血沫子，指甲盖也劈了好几次。 终于，我选择了离开北京。也离开我现在所在的团队。我们的团队是一群很出色的人聚集的团队，我们的产品却一直迟迟没有上线。作为技术合伙人，我和经理华东在对产品的定位上有着很大的偏差。人生嘛难免有分歧，谁都是有理想有抱负的人。完美的东西，我们谁都想追求，只是代价太高，时间太长。只是歧路坎坷，没有必要太过计较对与错。我尊重华东，更尊重华东想要的完美产品，只是我的能力给不了他。所以，也差不多该是离开的时候了。 我已经不只一次提出建议，我们的脑训练产品应该先有产品的核心价值，实现一套完整的商业模式，才是第一步的工作重心。具体可以通过技术方面的深入，来提升我们产品的价值。零零散散提过许多想法，好好总结一下： 一、数据库设计优化环节建议最吸引我加入智精灵教育科技团队的，不是待遇的优厚，不是福利的完整。而是大脑信息库相关的介绍。从我来这里之前我就强调了，数据的价值是不可斗量的。我希望我的工作重心都放在数据库上，比如从一开始就对数据库进行设计，避免冗余数据。但是我们从来不讨论数据库优化的环节，甚至不过问数据查询的优化，和数据采集的细节。当然，我们有足够的理由忽略这个环节。我们需要上线，那么实现功能即可。这样的话，不仅会产生大量的冗余数据，也会忽略很多关键数据的采集。 虽然华东说，我们不用管未来大数据量时候的事情，到时候重新设计，再做转移。我确实不逊地反驳了他很多，但是这句没有。因为这确实是能够实现的，但代价有多大，懂点技术的人应该都会了解。或许冗余的数据在转移的时候不会造成太大的影响，但数据的一致性、完整性该如何保证？我举个例子，当我们在脑信息库（转移后的新数据库）中需要分析某个年龄段某种职业下的人群的某种脑能力分布情况，而我们在测评中的数据，和用户信息库中年龄、职业信息不能够一一对应的时候，这些数据还有价值吗？我只是举一个例子，或许这样的事情不会发生，但难免会有同类的问题出现。如果这样的话，那我们的人群中的排名就只能依赖公式猜想的正态分布值来估算吗，那真正精确的分布曲线该怎么从我们已有的数据中计算出来呢？ 二、性能优化环节建议我在本地的测试环境上，经常会出现这样的情况，一个页面加载了好几秒才能够完成。那么产品上线之后面对大量用户该怎么办？平均每个页面都会有很多次的查询，比如顶部的导航栏，边栏，训练里面的数据查询，可能还有底部和其他，往往一个页面对数据库的查询多达几十次。当然，用 Ucenter 本身是可以静态化来提高速度的。但是反复的数据查询、提交，当用户稍微有些累积的时候，可能就会出现问题。当然，我们依然有足够的理由忽略这个环节。我们需要上线，那么功能实现即可。 反正 99%的网站在遇到性能问题之前已经死了，所以只要功能实现了就行。那么，我们真的就只是奔着那 99%的路去的？这个问题其实根本没有讨论的空间，因为轶平也总是说，功能实现了就行。到时候再说吧。那好吧，也放放。 三、原型先上线的建议其实我并不确切了解之前产品的进度是什么样，我也觉得没有太多必要去过问。因为我看过开始给我的一些文档，觉得实现起来并不困难。而且，约定了封闭开发一个月，清明节之前上线。虽然我也感觉有点紧，但是稍微加加班，赶赶进度，也是能完成的。当然，我说的这是在没有加所谓的角色和情节之前。后来，给训练程序加上了角色和情节，就很随意的，一个月的工期变成了两个月，而且我们也都很明白，两个月，其实也很紧张，几乎是没有太大希望能在五月初上线的。我也给华东举过很多小工作室和微博应用成功的例子，最初上线的只是一个简单的原型，比如微博统计的应用，最初很粗糙，而且速度也很慢，但是它的特色吸引了很多用户。后来，才不断美化，不断优化，变成了一个既好看又效率高的微博管理应用。 华东想要一个完整的产品，这个想法是好的。既好玩，又能体现科学性，第一版能够这样上线也确实不错。但是科学性的体现，我个人觉得，真的没有办法从所谓的正反馈中彰显出来。对了一题得了 10 分就得了 10 分吧，非要闪个动画蹦一下消失掉，非要给个小星星，其实一开始还想要小星星飞出来的动画效果，还要给小闪电。不是我不愿意做这些花里胡哨的东西，只是我真的没有弄明白，加上这些东西，我们的产品就有科学性了？而且，得了多少闪电，得了几颗星星，最后训练完了是不会提交到数据库的。训练程序其实早就做好了，但为了正反馈需要根据反应时间而加上闪电的奖励，去大动干戈，这除了让产品不断推迟上线，还能有什么其他立即能看到的效果呢？ 正反馈的最终效果究竟怎么样，这个我不好给评价，但眼下推迟一天上线，产品的价值变减少一分，这个我个人觉得非常严重的一个问题，我真心建议领导能够多多关注一下。而且另外，我还想多分享一点个人的见解。常言道，萝卜青菜，各有所爱。我其实也建议过，先不加角色和情节。等到以后改版重做的时候，再把这些好的创意融入到下一个版本的产品中去。 这不仅仅是为了提前交工，也是根据长尾理论触发来考虑的。 摘一段百度百科的解释先： 长尾理论（The Long Tail）是网络时代兴起的一种新理论，由美国人克里斯·安德森提出。长尾理论认为，由于成本和效率的因素，当商品储存流通展示的场地和渠道足够宽广，商品生产成本急剧下降以至于个人都可以进行生产，并且商品的销售成本急剧降低时，几乎任何以前看似需求极低的产品，只要有卖，都会有人买。这些需求和销量不高的产品所占据的共同市场份额，可以和主流产品的市场份额 相比，甚至更大。 过去人们只能关注重要的人或重要的事，如果用正态分布曲线来描绘这些人或事，人们只能关注曲线的“头部”，而将处于曲线“尾部”、需要更多的精力和成本才能关注到的大多数人或事忽略。例如，在销售产品时，厂商关注的是少数几个所谓“VIP”客户，“无暇”顾及在人数上居于大多数的普通消费者。而在网络时代，由于关注的成本大大降低，人们有可能以很低的成本关注正态分布曲线的“尾部”，关注“尾部”产生的总体效益甚至会超过“头部”。例如，某著名网站是世界上最大的网络广告商，它没有一个大客户，收入完全来自被其他广告商忽略的中小企业。安德森认为，网络时代是关注“长尾”、发挥“长尾”效益的时代。 出于对互联网的了解，我觉得数据非常重要，这也导致了用户的重要性，因为数据的来源主要是用户。既然萝卜青菜各有所爱，那么为何不在第一版产品中，训练产品都已原型的形式出现？虽然略显枯燥，但这是训练本身，虽然不可能让用户喜欢，但如果对此反感，即使再好的角色情节设计，他也不会坚持玩，因为他就是反感这个训练。当然，聪明的人明显能从这话里发现破绽，因为角色情节的设计吸引他来玩也是可能的。但注意我也有加限定词，是坚持，不可能坚持，因为他对训练本身没有任何兴趣。反过来，一些用户可能会因为设计的角色、情节不对他们的胃口，也连坐反感我们的训练程序，使之不能坚持下去。这岂不是出力不讨好的一件事情吗？ 我听说了，之前也调查过一批人，将产品打回来，说没什么兴趣，那个我也看过，确实不能提起任何兴趣。但这跟训练没有什么关系，跟有没有角色和情节也没有任何关系，只是界面的人机交互用户体验实在是太差。简单说，就是丑，太简陋。其实现在这个模板框架的设计已经很大气了，训练程序只要简单的 UI 美化一下，完全可以作为第一个版本上线来接受市场的考验。在没有任何用户的时候，应该优先考虑的是将用户最大化，哪怕只是来玩一次两次，至少也算个有效用户了，而不是说为了用户粘度，在没有用户基础的时候就放弃掉一部分用户，来黏住小部分用户。我曾经经常在说感情的时候会说，普遍撒网，重点捞鱼也是这样的道理，你要先撒大网捞，然后才去考虑扔掉你不想要的小鱼啊。一开始就有针对性地撒个小网，怎么可能捞上许多大鱼呢对不对？ 四、关于技术选用的建议确实，创业初期资金是一个很大的问题。我能理解，但我也经常对华东说这样一句话：为了赶进度而采用一些比较容易上手的技术，往往只会让进度拖延；同样，为了解决成本而采用一些跨平台的技术，往往也不能真的把成本节约下来，并且很可能就根本实现不了理想中要的效果。对于技术的选用，在公司里我应该最有发言权。因为我接触编程非常早，从小学，turbo basic，到现在公司用的 php，和公司没有用的其他主流技术。我没有说我们用的哪种技术不好，也没有说哪种技术非常好非用不可。同样，我也并没有为了图方便而让公司多浪费钱，也没有为了追求完美而要加大投入成本。所以，对于技术的选用，我多分享一些我的心得，毕竟是个技术人嘛。 首先，是 UC Home 和 PHP 用不用的问题。我的答案是 PHP 可以用，也可以不用，但 UC Home 是完全没必要用的。不仅仅是因为基于 UC Home 的二次开发对训练和测评的功能性扩展有着很大的束缚，还有 UC Home 本身是一个社交类的产品，而我们的产品主要特色并不在社交关键词上，便会有一种本末倒置的感觉。现有的社交类产品非常多，那么我们在融入社交元素的时候，也要考虑到社交环节的特色。不然的话，不仅不能够提高用户的粘度，反而会适得其反。PHP 也还行，但是我更加推荐用 ASP.NET，我觉得更贴近我们的开发。Visual Studio 自带的代码提示功能和 TFS 代码控制非常方便，而且我们对于数据库的设计不明确，这对用 ASP.NET 分层模式开发来讲，比 PHP 中对封装的修改要方便得多，甚至可以利用工具生成代码，而降低工作量。 其次，是关于 HTML5 和 Flash 的。flash 确实是一种快要落伍的技术，而且我也压根懒得去了解它，但不代表它现在已经落伍了。同时，html5 的兼容性非常差，毕竟它是一门未来技术。几年后的互联网，一定是属于它的，但现在，这一天并没有到来。这也是为什么 Lumosity 中使用了大量的 HTML5 来提升用户体验，但训练程序依然是用 Flash 做的原因之一。如果我们率先采用 HTML5 或 JS 来实现训练测评的全部功能，那在 Flash 训练测评的基础之上，效果会更好。所以，在放弃 Flash 的时候，其实我们就已经把 IE 6、7、8 和 360 XX 浏览器也一起放弃掉了。不然，想想，又能兼容各种智能手机，又想兼容 IE 和什么 360，怎么可能？当然也是可能的，但是做这样那样的 Hack，成本真的会比用 Flash 还低吗？而且效率真的会高过 Flash？当然不能只是说运行的效率，运行效率或许 JS 在 Client 上会快很多，但崩溃的几率也大，还有不容忽视的，就是开发效率。HTML5 的硬伤就是没有开发调试的 IDE（JS 也差不多，根本找不到一个好的 IDE），一下子 Flash 又可以沾沾自喜出来了，如果它真的没什么优势的话，我想它今天已经不存在了。而且，即使是较新的一些不是主流的浏览器，也不能完全兼容 HTML5 和 CSS3 的大部分特性，虽然 CSS3 能够实现很多动画的效果。而且对于用户体验来讲，目前使用 JS 这种训练测评程序，会有很大的硬伤，暂时还是没法跟 Flash 实现的东西拼的。所以，我至今不是很明白到底是出于什么原因我们的产品把 Flash 给淘汰掉了。但也就只是不明白，想想而已。 然后，就是 PhoneGap。PhoneGap 和 HTML5 类似，它也是属于未来的。曾有人提出这样的说法，未来是 iOS 的，更是 Android，归根结底还是 PhoneGap 的。虽然未来的 App Store 中，也许可能大概，苹果官方会放宽对 Web App 的审入，但至少目前没有，那么我们想要一步到位同时发布到 iOS 和 Android 上，这就有点不切实际了。虽然苹果很冠冕堂皇地说了，不会因为 App 使用的用户界面基于 HTML 而去拒绝一个应用。虽然这种情况更为常见，但这并不是最主要的一个劣势。像我们知道的常用手机 Apps，比如 QQ，微博，Facebook，人人，都是如出一辙，用的是 Native 开发，为什么呢？因为 PhoneGap 目前尚且实现不了一些 Native 的特效。而且这种实现不了不同于 HTML5 的兼容性，能在部分兼容的上面跑，而是根本无法实现。既然这些大公司都还没有抢先吃这口螃蟹，我们何必要拿我们的产品做这种不一定成功的尝试？而且虽说 PhoneGap 做的话只要做一次，不用针对 iOS 和 Android 分别做两次开发，但是除了将两个分工完成的工作扣到了一个人的头上，其他也没什么可减少的，无论项目周期还是开发成本。 五、其他建议关于成本，我并没有要求预算更大化，或是预算内最大化。我总是希望能省则省，尤其是吸收经验这种事情，我个人觉得是完全没有必要跟金钱挂钩的。华东常说的几句话是，我们是创业公司，一开始没有什么资金实力。就当花钱买个经验吧。我们是创业公司，这钱不花怎么能学到经验。我倒不是因为给我的工资很低让我觉得很憋屈，而是真心不希望公司浪费预算。就比如说设计师吧，定了换到现在也不知道有没有个准数。而且先前那个设计师，说工资拿得那么高而却连简单的切图做 html 都不会，这让我真心没看懂他那么高工资是怎么拿到的。当然，这里我也有点愤青了，我承认是我的不对，既然我也意识到我的错误了，也容我多吐槽一句吧，想我堂堂技术出身，苦学实干了那么多年，掌握熟悉的技能也好多样了才拿那么点微薄的工资，真是苦逼啊！而且，从后来外包和不断面试新招的人来看，抛开审美不谈我承认这个审美是不好评论的，但是就技术而言，好像都没有把图切完了给过我 html，也没见过有根据浏览器分辨率给过我不同尺寸的图，当然，更没见过把图切了之后最后根据 web 优化拼成一张完整的图给我的。至于究竟是什么原因，还是对这些设计师褒赞有嘉，这点我是真的不得而知不得而知啊……我这话绝对没有讽刺意味，因为我没法不承认，每一个我接触到的设计作品，都是很大气清新的。只是对于我们创业团队而且还是做 web 产品的来说，切图啊，转 html 啊，再优化啊这些都是要人来做的，所以我更希望在考察设计师的时候更多关注技能，而不是设计风格。当然啦，我的原因还是那句俗话，毕竟萝卜青菜各有所爱嘛。 不积跬步，无以至千里；不积小流，无以成江海。所以我觉得，一个产品，需要从很多细节的角度完善，才能成为一个好的产品。我这里说的细节，主要是针对技术核心和商业价值等一些需要重点关注的环节来说，不包括角色和情节的设计细节。 我只是表达个人意见，没有什么决定权。所以最后当然是要尊重领导的意见了。领导说，想要做一个具备科学性的，又要好玩、又要好看，不仅有训练、测评功能，又有社区互动环节，同时又能保持用户粘度的脑训练产品。这谁不想呢，当然也是我最大的愿望。很不幸的是，这不是在原型上线之前就能够实现得了的。假如我们真的实现了，也许是一件让人欢欣的事情。然而，我们依然会面对一个头疼的问题，那就是我们的产品有那么多形容词做定语，那么多功能点做扩充，那么我们就把特色给弄丢了。因为我们既不可能把科学性、好玩、好看、用户粘度高、社交功能作为我们的特色，也不能让用户主观猜测我们系统的特色究竟是什么。甚至，作为一个产品缔造的参与者，我也不能很好的定位出一个这么多形容词，这么多功能点的一个初期产品，究竟什么才是我们产品的特色。 当不断发现现有产品环节中的各种问题存在，并且没有得到很好的解决。我只能否定掉这个产品了。虽然我个人并不能代表市场，但市场的最终考验的答案，对我来说并不是那么重要了。作为一个技术人，从技术的角度出发，我们现在的产品，已经失败了。我并不是那么悲观的一个人，推翻，对我来说，只是一个新的开始。而且对于互联网行业来说，这也应该是个屡见不鲜的事情。重做，有的时候看上去是在浪费成本，但也可能，只是为了节约成本的考虑，不是吗？ 梦想可以很渺远，但是理想必须很现实。退一步说，理想可以很丰满，但是产品必须先骨感。但没有一个好的产品是从一大堆定语开始的。我相信有一天，66 脑产品会变成一个好的产品。因为经过我手的产品和项目，就没有失败的。所以这个产品，虽然目前没上线，上线也不一定立马成功，但绝对不会失败的。 虽然我在这边的几个月里，提的建议一条没有被接受过，但对我来说，依然是一段宝贵的成长经验。进 66 脑的时候，我投的是技术合伙人/CTO 的职位。在最初和华东谈的时候也谦虚的说了，可以先把我当项目经理一起成长。但是很可惜，我在这里一点决策权也没有，甚至连话语权其实也形同虚设。因为总是在苦口婆心地说，但从来没有实现到产品中去。后来我是真的懒得再说了其实，但出于对产品的负责，我还是经常重复地念叨。其实说实话，我心也有不甘。因为华东毕竟也是听进过别人很多意见的。比如，某位专家说，要做得好玩又好看，然后我们产品就加了两个定语。再比如，某位专家说 JS 实现跨平台应用非常方便，于是 Flash 死了。但是有什么办法呢，对于这个团队，还有这个产品，我已经尽心尽力了。虽然晓怡总是说，你努力了吗？我怎么没有看到你的付出。这我可以毫不谦虚的说，我就是那种可以为了一个好的结果，不图回报，默默奉献的那种人。我的工作效率非常高，这毋庸置疑，别人一周完成的工作，我可能只要半天就能完成。低调做人，高调做事，宝剑锋自磨砺出，效率高我必须高调。但并没有因为我的效率高，我就荒废了时间不去努力。我是个很会分配时间的人。华东偶尔会看到我玩游戏，也说我工作不上心。我和聪颖解释过，我是在研究游戏中的匹配规则，看和我们的排名有什么区别，也是为了验证能力的分布并不是呈标准正态分布的。同时，也是为了通过团队竞技，锻炼我的团队合作能力，增强团队意识，这不也是在工作嘛。我为这个团队付出了很多，不仅仅是付出了这上面列出来的那么多杂乱的建议，我也一直都在闲暇的时间里，考虑产品的规划，设计了一套产品框架的草稿，细化到系统模块和用什么技术去实现，后来轶平继续做了。如果只从任务角度来说，不仅我从来没有将我手头的工作延期完成，反而都是超前完成，这怎么能说我不够努力呢。除此之外，其实我也从大街网上推荐过好几个设计师和程序员了，我从大街网上收到了近 300 封简历，认认真真地每一个都仔细看完，筛选出了那么十几个给华东和晓怡参考。其实有好几个，我真的觉得很优秀，但后来，都没有后来了。就这样，我就成了一个既没有决策权，又没有在努力的一个闲人了。 我现在的工资是 5000，还是我主动要低点的，因为我选择了期权。但后来仔细斟酌了好久，发现我其实亏大了。因为期权这个东西，不是股权，它不是永久的，而且对于我们现在连产品都没有的创业公司来讲，是没有效益的，所以即使我有了 50%的期权，只是一个数字而已，对一个职员来讲，并没有任何意义。而且，反过来说，即使我没有选期权而要求更高工资的话，公司为了留住人才，以后也依然会主动给期权我的。所以毕竟对期权这概念不了解，就糊里糊涂地被绕进去了。我不是那么斤斤计较的人，我把这个分析出来只是因为想必也不会有多少人耐心看到这里，如果有误打误撞进来看到并且耐心看到这里的话，不是刚毕业，就是跟我一样内心闷骚的技术宅，分享一点心得也算是惺惺相惜吧：进公司之前谈待遇的时候，跳过期权的话题吧。 只有先对自己负责，才能对产品负责。我今年已经 25、6 岁，由于前一段时间境遇的不顺，害父母也跟着操心。我想要成家立业，安定下来。按我现在的工资来算，无论是在北京还是在南京，几个月不吃不喝，也不够买房子的一平米。我很想买套房，然后成个家。所以我不允许自己荒废青春，面对这样一个产品，一耗再耗，我怕我等不起它成功的那一天。 再见，北京。如果有期望，我再回来看您。","link":"/posts/2013/goodbye-beijing-goodbye-66nao/"},{"title":"言有尽、蹉跎——二十四周岁自嘲","text":"如果好久没有消息，那一定是过得不好。是的，混得不是很好，甚至都懒得写些什么了，无论是记录心迹，还是技术相关。 转瞬间，毕业一年了。 【生活】乱世人多事，耕桑或失时。邋遢了许多，其实也还好，只是处在一个邋遢的环境里没有以前那么整洁了。俗话说，嚼得菜根，做得大事。现在一个人蜷缩在一个肮脏潮湿的笑角落里，遥望着咸鱼翻身的一天呢。 因为辞职没工作的原因，生活作息很不规律。而且仔细想想，在没有找到新下家之前就辞职，真的是很冲动的行为。所以也导致了生活质量的下降。这心疼那舍不得的，天天都在抠着脚指头过日子的感觉。 我不喜欢斤斤计较，但是生活说，必须锱铢必较。没什么办法，基本上天天宅在家里了现在。 感觉说得好凄凉啊。不过还好，还能有什么更糟的情况呢，反正我也没有欠一屁股债，也算有一些积蓄的，虽然生活不是特别滋润，但也不算特别寒酸。 【事业】这一年中，已经换了三份工作。兜兜转转，回到了原点。甚至算得上是履历上不光彩的一篇，找份合适的工作会变得很困难。 很多事情怨不得别人，既然已经是错，无论责怪或是自责，谁都不会更好过。很惭愧，学了这么多年编程，还是个半吊子，学艺不精。很多时候，还是有些眼高手低。 当然，不得不说，千里马常有，而伯乐不常有。虽然我觉得做技术，我在技术方面不是特别强的，但我在其他方面的能力是不容小觑的。比如学习能力，无论是学技术，还是学业务流程；比如创新意识，会从互联网发展的大潮入手，对新技术、新方向的热情；比如责任心，我总会把手头的工作当成自己的孩子一样对待，而且不会夹杂太多个人的感情，而是从项目本身的角度出发去考虑。 总得来说，我还是个蛮优秀的年轻人，即使遇到挫败也不会轻易低头，这就是我与我的乐观。只是还有些浮躁，需要找个安稳的工作，静下心来，认认真真学习几年。 会有一番作为，虽然走了许多的弯路了，但现在还早。 【爱情】一个人过得久了，就会慢慢习惯一个人的生活。独立坚强不依赖别人。 可惜我是个爷们，本来就很独立。不再像从前，那么害怕一个人独处了，因为现在大多数的时间，都是一个人。一个人的时候，会想得多一些。或许吧，多多少少每个人心中都曾有过那么一个人，也许有可能，但更多的是不可能。用一句刚看来的话讲就是——“不管你以后是谁的女人，但你永远是我的女神！” 也许吧，只有一个人的成长才是真的成长。至少一个人的时候，你不能太孩子气，因为不会有别人看，累了自己扛。 没什么可说的，和事业一样，感情也走了很多弯路，到目前为止一直在失败。其实我自己也很想知道，谁牵着我的手，谁陪我到最后。 【总结】我不哭，我服输。告别了青春，不该再有太多不切实际的幻想。踏踏实实，从头来过。","link":"/posts/2013/24th-birth/"},{"title":"Ubuntu 13.04优化设置","text":"快捷命令： 选择窗体强制关闭进程： xkill 截图： gnome-screenshot -a 查询内存： free -m 设置自动清理内存： echo 3 &gt; /proc/sys/vm/drop_caches 官方说明： Writing to this will cause the kernel to drop clean caches, dentries and inodes from memory, causing that memory to become free.To free pagecache: echo 1 &gt; /proc/sys/vm/drop_cachesTo free dentries and inodes: echo 2 &gt; /proc/sys/vm/drop_cachesTo free pagecache, dentries and inodes: echo 3 &gt; /proc/sys/vm/drop_cachesAs this is a non-destructive operation, and dirty objects are notfreeable, the user should run “sync” first in order to make sure allcached objects are freed. This tunable was added in 2.6.16.","link":"/posts/2013/ubuntu-13-04-optimization/"},{"title":"Mac OS X 配置Ruby On Rails环境","text":"环境为 OS X 10.8 + RVM Ruby + Mysql 5.5 + MAMP 2.1.4 Mac OS X 80 端口莫名占用解决: sudo launchctl unload -w /System/Library/LaunchDaemons/org.apache.httpd.plist如果哪天你想让它开机启动了,则将 unload 改为 load 即可:sudo launchctl load -w /System/Library/LaunchDaemons/org.apache.httpd.plist Gem Sources 更新 gem sources -r https://rubygems.org/ gem sources -a http://ruby.taobao.org/ MAMP MySQL Client 库安装 下载 MySQL 5.5.29 源文件 复制 lib 下文件到 /Applications/MAMP/Library/lib 复制 include 下文件到 /Applications/MAMP/Library/include 安装 mysql2 sudo env ARCHFLAGS=”-arch x86_64” gem install mysql2 – –with-mysql-config=/Applications/MAMP/Library/bin/mysql_config 设置 Lib 路径 export DYLD_LIBRARY_PATH=”$DYLD_LIBRARY_PATH: /Applications/MAMP/Library/lib/“&nbsp; P.S. MAMP MySQL Socket 文件路径： /Applications/MAMP/tmp/mysql/mysql.sock","link":"/posts/2013/os-x-install-rails-mysql/"},{"title":"RubyMine for Mac最佳内存设置","text":"对于 RubyMine 6.0 往后的版本，设置文件在： /Applications/RubyMine/bin/idea.vmoptions 如果没有的话，可以手动新建一个。 我的电脑配置是： MacBook Pro Retina 2.6 GHz Intel Core i7 + 16 GB 内存 + 1TB SSD，所以我将设置文件改为： -Xms128m -Xmx2048m -XX:MaxPermSize=500m -XX:ReservedCodeCacheSize=128m -XX:+UseCodeCacheFlushing -XX:+UseCompressedOops 对于 RubyMine 5.4 和之前的版本配置文件名为： rubymine.vmoptions. P.S. 其他情况下会出现： 来源参考国外博客: http://coderberry.me/blog/2013/02/20/rubymine-memory-config-vmoptions/","link":"/posts/2013/rubymine-config-mac/"},{"title":"志难酬、虚妄——二十五周岁放诞","text":"人生天地之间，若白驹过隙，忽然而已。 不知不觉又是一个春夏，没有记录太多。虽是奔着多做事、少放屁，但也还是未见精进。 【生活】所谓生活，无非就是生下来、活下去。相较于很多同龄的朋友、同事、亲戚、同学而言，我也就只能算是活着，谈不上生活，更别说享受生活。 生活的艰辛，无非两种可能，要么被现实压迫，要么被欲望压迫。几年下来最大的愿望是买辆车，不过至今还停留在 0%的进度上。 身体状况也不太尽如人意。也算是太懒了吧，也有为钱途担忧，亚健康状态愈加明显。不适的时间，我经常会回首过去，把自己和欲望看得太重，有愧于好多朋友，一些重要的朋友渐行渐远。一颗平常心很重要，不能因为在意而念念不忘，也不能因为厌恶而抛诸脑后。世事无常，不能太计较是非、对错、得失，才能处之泰然。 【事业】从基层做起，或许只是一个美丽的口号。 空有一身技术，却无施展空间。虽说学艺不精，但也好歹浸淫多年，始终停留在打杂的层面，做着一些形同端茶倒水一般的事情。 不禁感慨，千里马常有，而伯乐不常有。前途堪忧，惶惶不可终日，对于事业，看不到什么希冀。俗话说先苦后甜，但苦尽甘来应该不发生在“基层”。或许，只有自己才是自己的伯乐，才能指点江山。 曾以为，以我的资质，会很容易证明自己的价值。到如今，依然还是碌碌无为。也曾想做些事情，不为利益，只为实现理想，而理想丰满，现实骨感。 梦想这回事，对于很多人来讲就是用来破灭的。若再不能做出点成绩，这一生就将注定要惨淡落幕了。半百之半，或尚有一线转机。 【爱情】幸福最深是平淡。套用一句说就是：“恋爱虽易，婚姻不易，且行且珍惜。” 爱情不是隐忍，而是包容。没有谁离不开谁，只有谁容得下谁。“海纳百川，有容乃大；壁立千仞，无欲则刚。”自私的人注定孤独，如果只是爱自己，那又何需爱情？ 无论事业、生活，或是爱情，终究不过是一份责任。但得起，就有；担不起，则无。 【总结】不求做伟大的人，却要做大写的人。 看似容易，其实不然。少言、多做，再出发吧。","link":"/posts/2014/25th-birth/"},{"title":"你好，世界！","text":"这是我在 Jekyll 的第一篇，现在的时间是 2014-06-28 16:33:27，这个模板是我用一夜时间粗糙赶工做成，日后将会不断优化完善。 如果你喜欢，可以在GitCafe上 Fork 我：https://gitcafe.com/willin/willin?invited_by=willin。 开发环境需要两样：node.js 和 ruby。 其中 ruby 不用多说，是 jekyll 运行的环境，node.js 是用于 scss、js 实时生成。 之前博客命名为 W3log ，意为 Willin Wang Weblog ，也可以当成是 WBlog 。 现在，更轻量了，所以我将名字改为 W2B ， 意为 Willin Wang’s Blog 或 (你懂的) 。 过段时间将有用文章重新整理转移过来，并且重新绑定域名。然后再考虑上博客评论功能，敬请关注。","link":"/posts/2014/hello-world/"},{"title":"Markdown 语法速记表","text":"##1 标题与文字格式 标题 # 这是H1 &lt;h1&gt; ## 这是H2 &lt;h2&gt; ###### 这是H6 &lt;h6&gt; 文字格式 **这是文字粗体格式** *这是文字斜体格式* ~~在文字上添加删除线~~ ##2 列表 无序列表 * 项目1 * 项目2 * 项目3 有序列表 1. 项目1 2. 项目2 3. 项目3 ##3 其他 图片 ![图片名称](http://gitcafe.com/image.png) 链接 [链接名称](http://gitcafe.com) 引用 &gt; 第一行引用文字 &gt; 第二行引用文字 水平线 *** 代码 `&lt;hello world&gt;`","link":"/posts/2014/markdown-start/"},{"title":"卸载Mac默认的Xcode附带的git","text":"这里说的优雅的卸载其实不是真正的卸载，而是不用动 Xcode 附带的 git，通过用户/.bashprofile 的文件来优雅的完成。仅仅需要在/.bashprofile 文件后追加如下的导出变量代码即可: export GIT_HOME=/usr/local/git export PATH=$GIT_HOME/bin:$PATH 通 git 官网下载的 mac 安装包进行安装，git 会被安装到 /usr/local/git Xcode 附带的 git 被安装到 /usr/bin 不必移动或者删除这里的 git 版本，仅仅需要更改一下用户下面的~/.bash_profile 的文件即可优雅的解决 git 版本的问题. 如果您非要卸载旧的也可以通过下面的命令来完成 sudo cd /usr/bin sudo mkdir old-git sudo mv git* old-git ln -s /usr/local/git ./ 请关注。","link":"/posts/2014/uninstall-mac-xcode-git/"},{"title":"全栈工程师常用在线工具整理","text":"在线建模 UML 绘图工具https://www.processon.com/diagrams 前端在线调试http://runjs.cn/code http://codepen.io/pen/ http://jsfiddle.net/ APP 在线测试云测 http://www.testin.cn/ 在线文档http://tool.oschina.net/apidocs HTML -&gt; JADEhttp://html2jade.org/ HTML -&gt; MarkDownhttp://higrid.net/c-html2md.htm MarkDown -&gt; HTMLhttp://tool.oschina.net/markdown http://tools.dedecms.com/markdown.html Encrypthttp://tool.oschina.net/encrypt JavaScript 美化/压缩http://tool.lu/js/ CSS 美化/压缩http://tool.lu/css/ 图标字体相关http://fontello.com/ http://www.iconfont.cn/ https://icomoon.io/app/ 更新日期: 2014-10-26 不断整理更新中…","link":"/posts/2014/fullstack-online-tools/"},{"title":"2014年终总结(物联)","text":"从 2014-08-11 到 2015-02-11，刚刚满半年。翻开当时写的记录，还记得那段时间其实有很多选择，而最终我选了物联。虽然不是待遇最好的，却是最能让我充满热情和憧憬的一个行业——智能家居。不忘初心，方得始终。 自身尚存的缺点一、恃才傲物。这是一个新问题，因为为今很多年轻人会错拿无知当个性（达克效应）。 自小我父母就教导我说“自后者人先之，自下者人高之。”凡事以和、宽容、谦逊为做人根本。我也自知一个人真正伟大之处就在于他能够认识到自己的渺小，所以，总是要求自己多学习，少说话；多做事，少做梦。虽然在工作中偶尔会被一些幼稚的问题气恼，但有一句古话“说才高不必自傲。”，其实还是自己未达到这样的高度。所以今后的工作中还需克制自己，更加谦逊。 二、避轻就重。作为一个专业的技术人，可能内心最深处还是只是想浸淫在某一块技术的海洋中，做一些有深度的钻研。虽然很多方面懂得不少，却并没有做得面面俱到，总是觉得太简单的事情就放给其他人去做，自己来做会耽误了自己的时间。但根据墨菲定律，任何事都没有表面看起来那么简单，所以即便想要先行深入，却还是会需要停下来等，或者再回过头来帮忙。海尔总裁张瑞敏说过：“坚持把简单的事情做好就是不简单。” 三、杂而不精。伍子胥上知天文，下知地理，千古难见。坦白说，我什么都懂点，但什么都不精。就如整理需求文档一事，虽然经验上明白该怎么做，但实际在辅助蒲茂林写的时候，很多细节元素还需要先检索才明白具体是什么。还是需要深入了解，知其然，知其所以然，才是成事之道。 自我感觉的亮点一、高效率。善于安排时间，并充分利用琐碎的时间，是我事半功倍的秘诀。工作之余，也会丰富自己的业余生活，如对理财投资、奢侈品、游戏、学习提高等也广泛关注。并且，我会经常将一些提高效率的方法和经验和其他人分享。 二、高要求。我最反感想当然，要么不做，要做就尽力做好。眼睛里容不得沙子，不畏困难。UI 设计中需要建模处理的，用 PS 做出简单模型效果；APP 应用中算法偏差大的，绘制数学模型写出精确算法，比如摄像头 APP 中的手势识别部分用的就是我设计的优化算法。 三、高主动性。不会思考，则只能被动。创业团队要的是激情，如果总是在等事做，或者被动跟着别人的脚步走，会跟不上团队进步的节奏。干一行要爱一行，我想要做的，是能够放到我自己家里的智能产品，是我自己和家人都会喜欢用的高端产品，所以会多考虑一些，将思想和感情注入到自己的产品设计中。 工作中的问题用盖房子来比喻做产品，楼想建得高，根基得打得深。由于目前团队根基尚浅，所以存在一些问题亟待解决： 一、团队太年轻。年轻是无知的代名词，年轻就需要成长。跟着团队一起进步，才能更加珍惜所取得的成就。学如逆水行舟，不进则退。做产品也是一样，不做出更好的产品超越已有的，丰富再多经验那也只是在倒退。厚积而薄发，所以我个人会不断做深层次的积累，也希望团队能够往深度、高度、广度这样的方向发展。 二、体制不健全。最大的体现在公司群，动辄会有检讨、扣分，检讨来检讨去，扣分来扣分去似乎已经形成套路，总是那么些面孔，也不见有什么实质性的措施。另外，部门内部和部门间的配合没有明确的规范流程，导致工作开展受阻，效率低下。开会的次数较多，很多会前应当小范围准备的工作都留到会上耽误了大家的时间。并且对于规范、流程、体制的理解欠缺，曲解了各阶段会议和评审的目的和意义，忽略了各类文档的价值和作用。 三、文档匮乏。文档撰写和 UML 建模都属于产品和技术人员必备的基础技能。虽然一些大团队会配备专门的文档工程师，但不代表做设计和研发的人员就不用输出文档了。项目中，人人都是文档工程师，所以这也是为什么开发、测试等都可以转职专门做文档工作。 四、产品有待提高。我们现有的产品市面上都有同类型产品，并且我们的网关稳定性差，App 体验也不好。虽然我们一直在说我们起步早，但却并没有发现什么走在行业前沿的核心竞争力。 后边的问题实际上也还都是团队太年轻的问题。要有动力，就得有压力。有不足，才有改进的空间。 量化工作统计过去的 2014 年里，参与 GitLab 项目 13 个（其中创建 10 个，协作 3 个），输出代码总计 184.6 万行（其中 GitLab 上提交 22.2 万行），目前在运行系统 5 个（API 接口，后台定时任务，VAdmin 后台，SSO 帐号管理，UDP 心跳处理），输出各类 UML 等图稿 65 张，文档 30 篇，为团队提供各类学习参考资料百余篇，为公司其他部门如海外部（周小洁）、网站组（江涛）、软件部（邹峰）等多次提出若干建设性意见。 非量化工作统计将系统从用 PHP 开发转移到用 Ruby on Rails，最终确定使用 Node.js，并且多次推翻重做提提高系统的性能。从对 Node.js 一无所知，到能够实现功能，再到能够针对性能进行进一步优化，收获了不少。刚进公司便参与了对路由产品的规划设计。在路由项目中，提出了“简单化智能”的概念，并将目光投向中老年市场。在国庆节时设计了最初的服务器架构，由于对于 OpenSips 所承担角色理解的不到位，忽略了其通信中存在的安全隐患和性能问题。后来参与摄像头项目的服务器端支持，配合 App 完成了接口的支持，进行对 OpenSips 的功能性扩充。​ 在手头工作完成的前提下，在做一些关于数据计算处理、机器学习和深度学习方面的预研和积累。此外，用心帮助团队其他人共同进步，建立了产品思维学习群，组织过几次产品思维训练，并不定期分享一些优秀的经验和技巧。 引入了之前累积的先进思想和经验，包括规范化的体系，如 CMMI，ISO27001 等，并且深入研究了敏捷 Scrum 模型。回顾过往，我依然还是一个新人，对于团队的融入还有欠缺，所以虽然尝试过旁敲侧击将这些成熟的体系慢慢灌输给团队却不尽如人意。体系规范无好坏之分，重要的则其善而行之，改善工作结构，提高协作效率。 将心理学、管理学、经济学等多元化思想融入到产品项目中。如睡眠者效应（心理学），通过对用户的心理按时潜移默化地培养用户习惯。如 KISS 原则（电影理论），“Keep It Simple, Stupid.”把产品做的连白痴都会用，追求简约而不简单。如帕累托法则（管理学），对用户需求理性取舍，满足用户所有的需求是不切实际的，所以需要筛选细化，满足用户的核心需求。如长尾理论（统计学），聚沙成塔，集腋成裘，可以通过低门槛，高基数的方式从微利中累积，淡化产品硬件价值，通过增值服务创造更多价值。 外界的这一年2014 是不平凡的一年，这一年中发生了很多大事件。 其中我印象非常深刻的有： 一、亿觅创意获得千万投资。亿觅（emie.com）是一个建立于 2012 年的设计师众包社区。当时我在之前的公司参与一个类似的设计师社区项目么么（memeing.cn），明信片在线设计和在线销售的平台。明信片现在已经慢慢退出人们的视线了，设计师也只是一个小众的群体，所以我对产品的定位存在异议，最后意见的分析让我选择离开。而亿觅很及时地意识到路线的问题，并进行了转型。现在他们的供应链已经基本健全，智能手表也已经即将出货。 二、拉手和三胞联姻。弱弱联合的出处。现在再看，也基本上销声匿迹未有作为。强强联手才是致胜的关键，不怕神一样的对手，就怕猪一样的队友，祝好运。 三、小米入股美的。12 亿多的投资是不小的手笔。小米对于智能家居的野心已经不是一天两天，而一直以来小米最大的问题在于抄袭和低端。小米最大的优势在于资金链和供应链，但从技术链而言，可以算近乎为零。而因为小米的大手笔，其麾下也有几个技术大牛，目前小米的存储和计算团队 14 人，负责运维高达 15 个业务集群。也该是时候打造我们自己的高素质后端团队了。 四、联想收购摩托。成长和成功未必都是一个劳累艰辛的过程。从目前的形势来看，联想需要担忧的问题恐怕得不少。相较而言，我更为欣赏谷歌的远见。人无远虑，必有近忧，凡事三思而后行，方能决胜于千里之外。 2015 年工作计划一、参与完成多功能网关产品的服务器端支持。优化现有接口性能，根据通讯协议优化业务流程，高质量完成功能模块。其中有一些需求可以预先做技术的累积，如语音控制、天气预报的语音合成等语音相关技术准备安排部门成员做深入的挖掘。我自己将对人机交互，机器学习，数据计算进一步研究。 二、完善 VAdmin 系统。打造一个完善的多元化监控、管理、运维云平台。现有管理系统中已经完成的模块有产品类别管理，版本发布，设备管理，日志管理，APP 错误收集分析；正在做的模块有网关后台的统计分析，APP 统计分析；准备做的模块有性能检测，运维管理等。 三、安排团队培训。已经安排联系了一些商业模式、文档建模相关的无偿培训指导。如果条件允许，还将计划申请一些外聘专家来进行团队内的研讨，进一步提高团队的技术水平、优化调整技术方向。 四、规划一款定位中老年市场的产品。发烧、追求极致、自己动手，一直都是我的标签，但我曾经有一段时间总是不断会想，如果我老了之后，该过怎么样的生活。想要做中老年的产品，不仅仅是为了我家里的长辈，也是在为我自己准备。我一直坚定认为，未来的几年中，中老年市场会成为市场的主流，并且会一直持续很久。在全球老龄化趋势的影响下，开辟中老年智能产品市场，只是早晚的事情。先人一步，遍地黄金。 结束语2015，智能家居将遍地开花。在过去的时间里，我们有超越，有停滞。不论过往是进步还是倒退，把握当下。没有人能够预测未来，就像没有人能够改变过去。与其记录历史，我更愿意去创造历史。 不求做伟大的人，却要做大写的人，这就是我。","link":"/posts/2015/wulian-1st-year/"},{"title":"日本雅虎程序员跳槽程序测试问题","text":"一救援机器人有三种跳跃模式，可分别跳跃 1m，2m，3m 的距离，请用程序实现该机器人行进 n 米路程时可用的跳跃方式。 程序语言不限，当距离 n 值足够大时，程序执行时间尽量小。 例：当距离为 4 米时，输出结果有 7 种： 1m,1m,1m,1m 1m,1m,2m 1m,2m,1m 1m,3m 2m,1m,1m 2m,2m 3m,1m 递归首先想到的,但性能不是很理想,想先算个 1000m 试试,结果程序直接崩掉了. 不得已换成了 35m: var calc = function (dist) { \"use strict\"; switch (dist) { case 0: return 0; case 1: return 1; case 2: return 2; case 3: return 4; default: return calc(dist - 1) + calc(dist - 2) + calc(dist - 3); } return 0; }; var start = new Date().getTime() / 1000; var result = calc(35); var end = new Date().getTime() / 1000; console.log(35, result, (end - start).toFixed(3) + \"s\"); //35 1132436852 '3.525s' 循环直接采用递归的话会有很多重复的计算,比如在 distance=7 的时候，会有 1+1+1+steps(4)，1+2+steps(4)，3+steps(4)，所以 step(4)会被重复计算多次. 然后是优化,明显快了很多,1000m 都是在 1ms 内完成. var calc2 = function (dist) { \"use strict\"; let steps = [0, 1, 2, 4]; for (let i = 4; i &lt;= dist; i++) { steps[i] = steps[i - 1] + steps[i - 2] + steps[i - 3]; } return steps[dist]; }; var start = new Date().getTime() / 1000; var result = calc2(1000); var end = new Date().getTime() / 1000; console.log(1000, result, (end - start).toFixed(3) + \"s\"); //1000 2.7588428077664853e+264 '0.001s'","link":"/posts/2015/yahoo-jp-test/"},{"title":"API接口性能统计之平均响应时间算法","text":"平均响应时间算法// count,restime let avg = (restime + parseFloat(val) * (count - 1)) / count; 经过反复测试，临界值为平均响应时间乘以 2 万次（如 200ms 为 400 万次），不会再变化。 如果当天请求超过平均响应时间乘以 2 万次，则不应该再计算新值。 // count,restime let avg = count > parseInt(a.toString()[0], 10) * 10e6 ? val : (restime + parseFloat(val) * (count - 1)) / count; 再根据平均值变化规律比较： 第N次请求 请求响应时间ms 真实平均响应时间ms 估算平均响应时间ms 误差时间ms 100000 845 497.2487 497.2436 -0.0051 200000 918 498.1223 498.1315 0.0092 300000 218 498.4573 498.4598 0.0025 400000 485 498.6902 498.6956 0.0054 500000 822 498.8887 498.9062 0.0175 600000 557 498.9837 498.9862 0.0025 700000 134 499.1102 499.1050 -0.0052 800000 710 499.1800 499.1870 0.0070 900000 953 499.2081 499.2134 0.0053 1000000 208 499.2690 499.2647 -0.0043 1100000 55 499.1008 499.1059 0.0051 1200000 948 499.1058 499.1114 0.0056 1300000 750 499.1675 499.1942 0.0267 1400000 876 499.2479 499.2886 0.0407 1500000 253 499.2871 499.3292 0.0421 2000000 210 499.2330 499.2541 0.0211 3000000 39 499.1828 499.1958 0.0130 4000000 718 499.0597 499.0905 0.0308 5000000 758 499.1318 499.1558 0.0240 6000000 782 499.0715 499.1010 0.0295 7000000 485 499.0926 499.1150 0.0224 8000000 768 499.0867 499.1361 0.0494 9000000 974 499.0664 499.0814 0.0150 10000000 715 499.1114 499.0791 -0.0323 前面估算平均响应时间与最终结果的比较： 第n十万次请求 与最终结果误差ms 1 -0.2271 2 -0.7094 3 -0.1553 4 -0.3421 5 -0.0279 6 0.0584 7 -0.1672 8 -0.0973 9 0.0287 10 0.0670 11 0.1468 12 0.1981 13 0.1896 14 0.2556 15 0.2311 20 0.2451 30 0.0722 40 -0.0506 50 -0.0816 60 -0.0248 70 0.0446 80 -0.0211 90 -0.0259 100 0.0000 大约在 10 万次请求之后，误差值会小于 0.1ms，最大不超过 0.4ms，可以接受。 最终算法// count,restime let avg = count &gt; 10E5 ? val : ((restime + parseFloat(val) * (count - 1))/count); P.S.测试脚本 var fs = require(\"fs\"); function pad(num, n) { \"use strict\"; let len = num.toString().length; if (len > n) { return num.toString().substr(len - n, n); } while (len &lt; n) { num = \" \" + num; len++; } return num; } // i,rand fs.open(\"./log\", \"w\", function (err, fd) { (function () { \"use strict\"; let rand, avg, avg2, sum = 0, million = []; for (let i = 1; i &lt;= 125 * 10e4; i++) { rand = Math.floor(0 + Math.random() * 999); sum += rand; avg = (sum / 1.0 / i).toFixed(4); // i,rand let val = (rand + parseFloat(avg2) * (i - 1)) / i; // 计算结束 if (!avg2) { sum = rand * i; avg = (sum / 1.0 / i).toFixed(4); avg2 = rand; } else { avg2 = val.toFixed(4); } if (i % 10e4 === 0) { million.push(avg2); fs.write( fd, `${pad(i, 10)}\\t${pad(rand, 10)}\\t${pad(avg, 16)}\\t${pad( avg2, 16 )}\\t${pad((avg2 - avg).toFixed(4), 8)}\\n` ); console.log( `${pad(i, 10)}\\t${pad(rand, 10)}\\t${pad(avg, 16)}\\t${pad( avg2, 16 )}\\t${pad((avg2 - avg).toFixed(4), 8)}` ); } } million.forEach(function (m, i) { fs.write(fd, `${pad(i + 1, 3)}\\t${(million[124] - m).toFixed(4)}\\n`); console.log(`${pad(i + 1, 3)}\\t${(million[124] - m).toFixed(4)}`); }); })(); });","link":"/posts/2015/api-average-response-time/"},{"title":"js版Leetcode spiral-matrix-ii","text":"问题原题地址： https://leetcode.com/problems/spiral-matrix-ii/ Given an integer n, generate a square matrix filled with elements from 1 to n2 in spiral order. For example,Given n = 3, You should return the following matrix: [ [ 1, 2, 3 ], [ 8, 9, 4 ], [ 7, 6, 5 ] ] JS 版 148ms 通过结果/** * @param {number} n * @returns {number[][]} */ var generateMatrix = function (n) { var result = []; var index = 0; for (; index &lt; n; index++) { result.push(new Array(n)); } var i = 0, j = 0, directionX = 0, directionY = 1; index = 1; while (index &lt;= Math.pow(n, 2)) { result[i][j] = index++; if ( directionX === 0 &amp;&amp; directionY === 1 &amp;&amp; (j === n - 1 || result[i][j + 1] !== undefined) ) { directionX = 1; directionY = 0; } else if ( directionX === 1 &amp;&amp; directionY === 0 &amp;&amp; (i === n - 1 || result[i + 1][j] !== undefined) ) { directionX = 0; directionY = -1; } else if ( directionX === 0 &amp;&amp; directionY === -1 &amp;&amp; (j === 0 || result[i][j - 1] !== undefined) ) { directionX = -1; directionY = 0; } else if ( directionX === -1 &amp;&amp; directionY === 0 &amp;&amp; (i === 0 || result[i - 1][j] !== undefined) ) { directionX = 0; directionY = 1; } i += directionX; j += directionY; } return result; };","link":"/posts/2015/leetcode-spiral-matrix-ii/"},{"title":"js版Leetcode接受率最低题valid-number","text":"问题原题地址： https://leetcode.com/problems/valid-number/ Validate if a given string is numeric. Some examples: “0” =&gt; true “ 0.1 “ =&gt; true “abc” =&gt; false “1 a” =&gt; false “2e10” =&gt; true Note: It is intended for the problem statement to be ambiguous. You should gather all requirements up front before implementing one. JS 一句话版 通过结果/** * @param {string} s * @return {boolean} */ var isNumber = function (s) { return /^\\s*[+-]?(\\.[0-9]+|[0-9]+(\\.[0-9]*)?)(e[+-]?[0-9]+)?\\s*$/.test(s); };","link":"/posts/2015/leetcode-valid-number/"},{"title":"js版Leetcode第一难题wildcard-matching","text":"问题原题地址： https://leetcode.com/problems/wildcard-matching/ Implement wildcard pattern matching with support for ‘?’ and ‘*‘. ‘?’ Matches any single character. ‘*‘ Matches any sequence of characters (including the empty sequence). The matching should cover the entire input string (not partial). The function prototype should be: bool isMatch(const char *s, const char *p) Some examples: isMatch(“aa”,”a”) → false isMatch(“aa”,”aa”) → true isMatch(“aaa”,”aa”) → false isMatch(“aa”, “*“) → true isMatch(“aa”, “a*“) → true isMatch(“ab”, “?*“) → true isMatch(“aab”, “cab”) → false Timeout 版 结果//Timeout Version: var isMatch = function (s, p) { p = p.replace(/\\?/g, \".\").replace(/\\*+/g, \".*\"); var reg = new RegExp(\"^\" + p + \"$\"); return reg.test(s); }; 正则表达式的效率还是很低的. JS 版 通过结果/** * @param {string} str * @param {string} pattern * @return {boolean} */ var isMatch = function (str, pattern) { var s = 0, p = 0, match = 0, index = -1; while (s &lt; str.length) { if ( p &lt; pattern.length &amp;&amp; (pattern.charAt(p) == \"?\" || str.charAt(s) === pattern.charAt(p)) ) { s++; p++; } else if (p &lt; pattern.length &amp;&amp; pattern.charAt(p) === \"*\") { index = p; match = s; p++; } else if (index != -1) { p = index + 1; match++; s = match; } else { return false; } } while (p &lt; pattern.length &amp;&amp; pattern.charAt(p) === \"*\") { p++; } return p === pattern.length; };","link":"/posts/2015/leetcode-wildcard-matching/"},{"title":"待重头、涅槃——二十六周岁思绪","text":"如果你今天没有努力，明天就不会成功。 风格很久没有记录文字，摸起键盘已经不知道该说些什么。我已经忘记了自己曾要做一个诗人，做一个小说作家。翻看回这几年来每一年写的东西，没能让自己读完，太过于悲观，或许是人生中最坎坷曲折的几个年头，但更多的，只是宣泄。就像不知道从什么时候开始，连自己都不愿意看到镜子里的自己，又胖，又黑，这也就罢了，感觉还越来越丑了。 一直在围绕生活、事业、爱情来开展，似乎也是时候换一种风格了。 进展(Progress) - 我达到的程度在非技术领域涉猎广泛，尤其对经济学、心理学、物联网产业和产品、用户体验等各个方面。 呵呵，像上面这种废话就没什么说的必要了。虽然确实是事实。 现实和理想还是有差距的。去衡量一个人一段时间提升了多少，最好的方法就是去衡量他创造了多说价值，以及给亲友带来多少便利。换言之，我做的很多事情并没有什么价值，并与我设想的相差甚远。总体来说，做的事情大多是很简单的，简单的事情我完成得也算不错。 说来惭愧，每天挣扎在各种简单没有技术含量的事情中，大多做出来的成果也无非就是把一件简单的事情换另一种更简单的方法实现。而我渴望着，更大的困境和挑战。 过程(Process) - 我在做的事情不用多说也知道，一直是在做一些服务器相关的事情，目前主要是在做 Open API 平台和后台管理系统。关键词： DevOps、全栈、算法、性能、安全、并发、数据处理。 正如我刚说的，实际上做的事情都是在重复一些简单过程。是时候做出一些改变了，尝试一些新事物，和一些新创意。 除了主要工作，排在首位的是学习如何进行团队的协作与管理，这是一个薄弱点。 工作之外的事情，并没有什么好消息。 计划(Program) - 我可能会去尝试我又不是英雄，拯救世界我做不来。在路上，做的都是为了先给自己一个更好的世界，给爱的人一个更好的世界，然后，才可能是给这个世界一个更好的世界。 这里有一份代办事项清单（未来的一年内）： 读一些书。其实今年已经又买了很多，但因为很忙还没读完，如一些幽默故事，诗歌，技术等相关的。 一场远行。暂定 1000KM 之外。 复习英语。落下了很久，已经生疏了。 一次升职。然后给自己定更高的目标。 改善生活习惯。健康的身体，革命的本钱。 一段感情。一起步入爱情的坟墓。 或许并不算一件难事，建立一个家，积攒起匮乏的安全感。当然也不是那么简单的一件事。 结束亦是开始记忆总是泛着一丝苦味，所以谈起的时候再努力也会显得有些消极，但实际上，面对未来，我是很乐观的人。我喜欢计划，也有明确的方向感。 写到这里的时候我扫视了一遍前文，宠辱不惊的感觉并不喜欢，实际在过去的一年里，喜悲不断。那就少写一点吧，多做一些实事。 不求做伟大的人，却要做大写的人，这就是我。 If you are not getting tired out today, you will not succeed tomorrow. StyleIt has been a very long period before I write something. When I touch the keyboard, my brain goes empty. I can hardly remember I’d like to be a poet, a novelist. Turned back to those words I wrote every birthday, too negative too naive. Perhaps those days could be the worst of all my half life, more behind that are catharses. Just as, I began to hate the guy I see in the mirror, fat, dark, and ugly. Around with Life, Work and Love things for long, it’s time to have a new style. Life Love and Work thingsThe game of life is hard to play. It’s not a easy thing to describe and I choose to leave it unsaid. However to draw a conclusion, there hadn’t been anything important happened during the past year. Progress - Things I’ve done.In the Non-Technical field, dabbling in many areas especially the economy, the psychology, the IoT industries and products and user experiences. What a load of crap. Altough it’s the truth. The ideal is the ideal and the reality is the reality. The best way to evaluate the improvement of a person in a period of time, is to calculate how much value had he created and how much benefits had he brought to ralated. In another way, most things I done make no sense. And they are far awawy from I expected. In general, most things done are simple, and simple things go well. It’s ashamed to say, the progress I’m struggling with usually comes in a easy way and be made to another easier way. What I hope to deal with, is something hard and tough. Process - Things I’m doing.No need to say, the work is always around server-side things. Major in Open API Platform and Admin Dashboard Management System. Keywords: DevOps, Full Stack, Algorithm, Performance, Security, Concurrency, Data Analysis. As I just said, repeating simple things. And it’s time to make some changes, and do something new, something creative. Except main job, lerning team cooperation and management is the top thing, ‘coz it’s a weakness of mine. When not on the job, there is barely good news. Program - Things I’ll do.I’m not a hero, I can’t save the world. On the road making a better world for myself, my beloved and then perhaps the whole world. There is a list doing and todo for the following year. Read several books, such as humor stories, poems, technical and so on. Go on a trip, distance over 1000km. Review English. Enhance the job position. Improve living habits. Start a relationship. Maybe it’s not a hard thing, to build a home up I need, to gain the the security sense I lost. However it’s not so easy. Start OverMemories are always a bit of bitter. When it comes to the begones, it seems some negative but in fact I’m affirmative. I like plans and I have a clear sense of direction. Write less, do more. To be Willin, is to be willing.","link":"/posts/2015/26th-birth/"},{"title":"Hexo文章计数插件WordCount","text":"灵感来自简书。 字数统计的结果跟简书有差异，主要是由于本插件只统计了中文字数和英文单词数，所以结果会比简书统计的字数略少一些。 特别适合文字爱好者，比如我。 项目地址： https://npmjs.org/package/hexo-wordcount 安装和使用安装npm i --save hexo-wordcount 使用修改Themes模板文件，在Post文章模板区域加入： &lt;span class=&quot;post-count&quot;&gt;{{ wordcount(post.content) }}&lt;/span&gt; 即可统计单篇文章的字数。 &lt;span class=&quot;post-count&quot;&gt;{{ totalcount(site) }}&lt;/span&gt; 上面这句是统计总字数的，可以放到Footer或其他位置里。 A Word Count plugin for Hexo. InstallationInstallnpm install hexo-wordcount --save UsageSwigPost Count: &lt;span class=&quot;post-count&quot;&gt;{{ wordcount(post.content) }}&lt;/span&gt; Total Count: &lt;span class=&quot;post-count&quot;&gt;{{ totalcount(site) }}&lt;/span&gt; EjsPost Count: &lt;span class=\"post-count\">&lt;%= wordcount(post.content) %>&lt;/span> Total Count: &lt;span class=\"post-count\">&lt;%= totalcount(site) %>&lt;/span> JadePost Count: span.post-count= wordcount(post.content) Total Count: span.post-count= totalcount(site) LICENSEMIT","link":"/posts/2015/hexo-wordcount/"},{"title":"Node.js跨应用TCP Socket连接通讯优化","text":"应用场景描述 有一个 Socket 应用,会有连接接入进来 另外有一个测试工具应用,会向某一连接下发消息 原始方案一 将测试工具的下行消息暂存到 Redis 缓存中. 每个接入的 Socket 分配一个 Timer 轮询,从缓存中读取消息下发. 问题Socket 关闭后 Timer 的清除,有的可以有的不可以(原因不详),就导致了内存泄露,程序崩溃. 原始方案二 依然用 Redis 缓存下行消息. 一个全局的 Timer 轮询,每个 Socket 连接放入堆栈,关闭就 pop 出去. 问题具体问题描述不详,PM2 和 Alinode 监控内存和 CPU 占用都很低. 但就是在一段时间后,Socket 应用不再工作. 新方案 不用 Redis 进行消息缓存,把测试工具也当成一个 Socket 连接. 当有下行消息,测试工具立即将消息发给 Socket 应用. 优点 新方案中不再有轮询,消息实时性高 不再有消息队列,节省服务器资源","link":"/posts/2015/nodejs-socket-performance/"},{"title":"2016.1.1 搬家","text":"终于把亲水湾的房子退了，租房多年来最令人反感的一个房东。我只记得他姓陈，好像叫陈明武还是什么来着，不重要了，反正已经拉黑了。 令人反感，并不是因为他多丑，至少第一眼看上去挺和善的。总结起来，可能主要有两点，一是不尊重人，也不顾及他人隐私；另一点就是太过于贪婪，占别人便宜。 最早有想走的念头是因为他总是趁我不在家的时候光顾我这边。我有一个习惯，关门的时候会留一点小心思，这样有人动过我就知道了；发现了几次之后，我不确定是不是房东来过，直到有一天身体不适没去上班，房东带！人！来！看！房！而我衣衫还不整地躺在床上。后来也有过很多次，而却从来没有跟我打过招呼。 住了一年多的时候，热水器老化坏了，我请他来修。修好了之后他跟我说花了几百块钱，要我出。当时我就在想，是不是我修的钱我出了，等我走了就可以带走？为什么由我修给下一个房客用呢？我交了那么多房租，不就是为了跟毛坯房有点不一样的享受么？退房当天漏接了我很多个电话，晚上的时候终于接电话了，说自己喝高了。我不想拆穿这个老人家，真不是演技派，破绽太过了。电话里面晕得要死要活的，见了面跟没事人一样；在嘴里漱了两口酒，毛孔里一点点酒味都散不出来。年轻人可能阅历浅，但这只是相对的；无知果然比知识更容易让人产生自信，为老不尊。床留下来了，床垫留下来了，风扇留下来了，电热毯留下来了，空调留下来了；空调还是新的，2800 买的，给了 100 块（实际上一毛也没给，因为押金是给了 2500，他却说押金 2400，这是后来才回过头想起来的）。剩的两个月房租也没退，借口是房子要卖两个月也租不出去了。不知道是不是人越老越糊涂了，一是你房子卖不卖租不租出去跟我没有半毛钱关系，我并没义务未你承担风险；二是傻子才信你会卖，要卖早卖了，隔三差五偷偷带个人来看房子，明显是价格要得抬高谈不拢，又贪得无厌不肯让。 很多事情，不方便拆穿。就像不照镜子不知道自己脸多丑，一旦看到自己的脸可能都会被自己吓死。有那么些的人，钱越多反而越贪婪；年岁越高反而越无耻。想想挺可悲的。","link":"/posts/2016/move-house/"},{"title":"2016.1.2 月捐停止","text":"截止到 2015 年 12 月，我整整为壹基金坚持捐款了五年（60 个月）了。 不知道腾讯公益抽什么风，月捐不能在线付了。改成微信支付，付了还不知道成功了没有。页面上的捐款人数也瞎跳，支付前显示当月已捐赠 9 人，支付后变成了 8 人。。。 也不知道，还有没有人，也是跟我一样坚持把公益做了这么久，却被平台抛弃了。 善心常在。","link":"/posts/2016/stop-tencent-public-welfare/"},{"title":"2016.01.05 多面世界","text":"好像，只有难听的话表达得才最为真实。而其他的话，无论好坏，都可能会跟上转折。 比如，你真丑（我真的嫌弃你）；比如，你真胖（我真的嫌弃你）；比如，你真矮（我真的嫌弃你）；比如，…… 比如，天很晚了（我不想见到你）；比如，我吃饱了（我不想见到你）；比如，你很忙啊（我不想见到你）；比如，…… 比如，你是好人（但我不喜欢你）；比如，你很优秀（但我不喜欢你）；比如，你很体贴（但我不喜欢你）；比如，…… 我一直不能明白，什么话像说出来的那么简单，什么话有更深的一层含义。我也一直不能明白，为什么两个人能一个像夏天，一个像冬天。 有的人，在外面很坚强，总是努力保持着微笑，却总是对着屏幕哭得很伤心；也有的人，内外都脆弱，总是轻易落下眼泪，却也总是对着屏幕开怀大笑。 有的人，想得很多，肩负起责任，想要无忧无虑却总是劳心劳累；也有的人，不去想未来，依然不轻松，想没有烦恼却只能没心没肺。 有的人，充满了希望，总是想从黑暗中找寻出一丝光亮；也有的人，躲在阴影下，即便是晴天也只注意到一片乌云。 这是一个多面的世界，有光照的地方，自然有阴暗。我不愿从别人的表情里揣测到这个世界有多么美好，所以我学会了用耳倾听；我不愿从别人的言语里听闻到这个世界有多么美好，所以我学会了用眼观察；我不愿从别人的生活里目睹到这个世界有多么美好，所以我学会了用心体会。 这是一个不完美的世界，有人欢笑，自然有人哀伤。悲伤的人那么多，不要再多一个两个你我。 每一场暴雨终究都会停歇，就像每一幕黑夜终究都会白昼。每一段烦恼也终究都会消散。一切都会好起来。你要相信。","link":"/posts/2016/multiple-world/"},{"title":"Node.js版Hello Dolly","text":"This is not just a plugin, it symbolizes the hope and enthusiasm of an entire generation summed up in two words sung most famously by Louis Armstrong. 如何使用npm install --save hello-dolly 示例: var hello_dolly = require(\"hello-dolly\"); console.log(hello_dolly()); //English console.log(hello_dolly(\"en\")); //English console.log(hello_dolly(\"zh-CN\")); //Simplified-Chinese console.log(hello_dolly(\"test\")); //Others Default Language English 惟一参数 语言. 如何贡献多语言支持需要. 请随意 Fork. 项目地址: https://github.com/willin/node-hello-dolly","link":"/posts/2016/node-hello-dolly/"},{"title":"js版Leetcode Single Number","text":"问题原题地址: https://leetcode.com/problems/single-number/ Given an array of integers, every element appears twice except for one. Find that single one. Note: Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory? 问题描述: 给出一个奇数位的数组, 所有元素都出现了两次,除了其中的一个数,找出这个孤立的数. 例子: [1,2,3,2,1,4,4] 输出应该为: 3 要求：设计的算法是线性的复杂度，并且不要用额外的内存空间。 超时答案超时答案一/** * @param {number[]} nums * @return {number} */ var singleNumber = function (nums) { for (var i = 0; i &lt; nums.length; i++) { var result = nums.shift(); if (nums.indexOf(result) === -1) { return result; } } }; 超时答案二/** * @param {number[]} nums * @return {number} */ var singleNumber = function (nums) { if (nums.length === 1) return nums[0]; for (var i = 0; i &lt; nums.length; i++) { if (i === nums.lastIndexOf(nums[i])) { return nums[i]; } } }; 解题思路异或运算的几个相关公式： a ^ a = 0 a ^ b = b ^ a a ^ b ^ c = a ^ (b ^ c) = (a ^ b) ^ c d = a ^ b ^ c 可以推出 a = d ^ b ^ c a ^ b ^ a = b 本题可以抽象成：int 数组里有 x1, x2 … xn（每个出现 2 次），和 y（只出现一次），得出 y 的值。 由公式 2 可知，数组里面所有数异或的结果等于 x1^x1^x2^x2^…^xn^xn^y 由公式 3 可知，上式等于(x1^x1)^(x2^x2)^…^(xn^xn)^y 由公式 1 可知，上式等于(0)^(0)^…(0)^y = y 因此只需要将所有数字异或，就可得到结果。 通过答案/** * @param {number[]} nums * @return {number} */ var singleNumber = function (nums) { var result = 0; for (var i = 0; i &lt; nums.length; i++) { result ^= nums[i]; } return result; }; es6: /** * @param {number[]} nums * @return {number} */ const singleNumber = (nums) => nums.reduce((x, y) => x ^ y);","link":"/posts/2016/leetcode-single-number/"},{"title":"2016.01.27 治国","text":"之前听过这么一个段子，说一个人跳槽，无非只有这么两点动机。 钱，少了。 王者之国，使人民富裕；霸者之国，使士富裕；仅存之国，使大夫富裕；无道之国，国库富裕。——姜子牙 很多时候，我不是很明白，工作那么拼命到底是为什么。包括我自己，身边的很多人都很努力，却都很可悲。流光容易把人抛，红了樱桃，绿了芭蕉。累死累活，把自己拖垮了，低头看看瘪瘪的钱包，基本上还是一无所有。 那么多年，我们究竟努力把钱塞满了谁的口袋？ 心，累了。 域民不以封疆之界，固国不以山溪之险，威天下不以兵革之利。得道者多助，失道者寡助。寡助之至，亲戚畔之。多助之至，天下顺之。——《孟子·公孙丑下》 一种情况，是失人心。做到因势而谋、应势而动、顺势而为，或许是一件很容易的事情。但总是逆势而行，或恐回天乏力，神仙难救。 丘也闻有国有家者，不患寡而患不均，不患贫而患不安。盖均无贫，和无寡，安无倾。夫如是，故远人不服，则修文德以来之。既来之，则安之。——《论语·季氏》 另一种情况，是失公正。公是公平，正是正义。若私心太重，罔顾客观事实，所及之处，人心不服。 故有 依道不依势、依志不依力 之说。 古之欲明明德于天下者，先治其国；欲治其国者，先齐其家；欲齐其家者，先修其身；欲修其身者，先正其心；欲正其心者，先诚其意；欲诚其意者，先致其知，致知在格物。物格而后知至，知至而后意诚，意诚而后心正，心正而后身修，身修而后家齐，家齐而后国治，国治而后天下平。——《礼记·大学》 一般而言，男人，成家立业。先成家后立业，或者专心扑在工作上，不成家。工作不着家的领导，不跟也罢。 一般而言，人非圣贤，多多少少都会有些私心。要做到利他真的很不容易，但至少，应该与人无害。 一般而言，所有美好的愿景，都是幻想；所有画的大饼，都会泡汤。只有脚踏实地，一步一个脚印，才能闯出一片天。 人心所归，惟道与义。——《晋书·熊远传》 人就是很奇怪，总喜欢自己骗自己，却不喜欢别人骗自己。凭君莫话封侯事，一将功成万骨枯。","link":"/posts/2016/think-about-leading/"},{"title":"Hexo文章阅读时长预计","text":"这是对Hexo 文章计数插件的一次更新. 效果可参考本站. 项目地址： https://npmjs.org/package/hexo-wordcount 安装和使用安装依然是: npm i --save hexo-wordcount 升级npm update hexo-wordcount --save 使用修改主题模板, SWIG 语法: &lt;span class=&quot;post-count&quot;&gt;{{ min2read(post.content) }}&lt;/span&gt; EJS 语法: &lt;span class=\"post-count\">&lt;%= min2read(post.content) %>&lt;/span> JADE 语法: span.post-count= min2read(post.content)","link":"/posts/2016/hexo-min2read/"},{"title":"2016.2.29 人为什么活着","text":"乔布斯生前有一句口头禅：“活着就是为了改变世界”。 每个人活着，都是为了改变这个世界。这并不是痴人说梦。小的时候会想，长大了当个科学家，让全世界知道。慢慢长大了发现，这种机缘可遇而不可求，不能够帮助所有人改变。然后就想着，做些什么，能够影响到绝大多数人，这也是很难的。世界很大，同时也很小。至少，可以帮助身边的人改善，哪怕只是影响到三五百人，甚至只有三五个人，也不算白活一场。 很多人活着，却活不明白。人可以没有梦想，但不能没有方向。赚钱不能算是活着的目的，它只应是一种结果。向上爬也不能算是活着的意义，得道者多助，而道可道，非常道。作为一个男人，肩负的责任很多，让心爱的人幸福是其中一部分。怎么让自己的爱人幸福？赚很多钱给她花，让她过上体面的生活？如果说爱要跟金钱挂钩，这跟包养有什么区别，惟一的不同，一个是天天睡，一个不是天天睡，仅此。 对待亲近的人，能给他什么不是最重要的，能让他学会什么，帮助他得到更多，才是最好的状态。对待自己，不能指望别人的施舍可怜，更不能自怨自艾。我看过一篇文章《你弱你有理》。弱，有理吗？穷，不是你口袋里面有多少，而是你心里面有多少。心里少，口袋里再多，花完也只是时间；心里多，口袋里再少，赚来也只是时间。修身，齐家，治国，平天下，做人最大的乐趣就是在混乱之中找到属于自己的系统。浮躁的社会之中更该如此。 活着就是为了改变世界；改变世界就是为了证明人生的意义；证明人生的价值就是人为什么活在这个世界上。","link":"/posts/2016/why-people-live/"},{"title":"MySQL跨表数据同步优化","text":"应用场景描述 有两张设备在线状态表,其中一张记录心跳时间戳(tb1),另一张做异地数据同步(tb2). 原始方案&gt; 查询tb1所有数据,循环(select all) &gt;&gt; 判断该条数据对应的设备是否依然在线 &gt;&gt;&gt; 若在线 &gt;&gt;&gt;&gt; 查找tb2中是否存在该设备ID(select limit 1) &gt;&gt;&gt;&gt;&gt; 若存在,更新(在线:true, update 1) &gt;&gt;&gt;&gt;&gt; 若不存在,插入(在线:true, update 1) &gt;&gt;&gt; 若不在线 &gt;&gt;&gt;&gt; 查找tb2中是否存在该设备ID(select limit 1) &gt;&gt;&gt;&gt;&gt; 若存在,更新(在线:false, insert 1) &gt;&gt;&gt;&gt;&gt; 若不存在,插入(在线:false, insert 1) &gt;&gt;&gt;&gt; 删除tb1中已离线的记录(delete) 问题遍历所有数据,频繁查询,效率低下. 优化要求 避免遍历所有数据 不能有太多 SQL 语句 减少不必要的数据操作 设计思路首先:考虑该场景涉及到的数据类型 保持在线(无变化) 新上线 已下线 针对这三种类型数据的处理方式 之前在线,现在依然在线,不做任何处理(处理干什么?) 新上线,插入到 tb2 中 已下线,从 tb2 中删除 改良过程: tb1 中历史在线数据没必要清除 解决方案两条 SQL 语句搞定: 1.添加在线不在同步表里的设备 insert into tb2([fields]) select [fields],[data] from tb1 left join tb2 on tb1.`key` = tb2.`key` where tb1.updatedat > [时间戳] and tb1.location = [地域] and tb2.did is null; 2.删除同步表里当前不在线的设备 delete from tb2 where location=[地域] and `key` not in (select `key` from tb1 where updatedat > [时间戳] and location = [地域]);","link":"/posts/2016/cross-tables-mysql-performance/"},{"title":"2016.3.29 新木桶原理","text":"一只木桶能够装多少水正常情况下（指木桶的大小是一定的，也不斜放等）取决于三方面的因素：第一、是每一块木板的长度，最短的木板决定盛水量。第二、是木板与木板之间的结合是否紧密。第三、是有一个很好的桶底。第一个因素大家好理解；但如果木板与木板之间存在缝隙或缝隙很大，也无法装满水；同样如果没有好的桶底，盛水只能是空想，这就是新木桶原理。 木板的长短，即知识和经验的广度和深度。木板间结合的紧密度，即学习的能力和学以致用的能力。木桶的桶底，即基础，包括天赋、智商、价值观等。 桶底，决定是否能够成为一个容器；木板间结合的紧密度，决定这个容器是否能用来盛水；木板的长短，决定了这个盛水的容器能够盛多少水。","link":"/posts/2016/buckets-effect/"},{"title":"2016.4.1 不要当傻瓜","text":"不要让自己当傻瓜在研发团队中，有两种常见类型的傻瓜。一种是一心钻技术，技术再深，在产品中无用武之地；另一种是一心构想理想化的产品，产品再宏大，无法被现有技术实现。 技术不是万能的，所有的技术都需要落地为产品，才能创造价值。技术就像是高楼之根基，得打下去，楼才能稳固；但却没有人能看到根基的样子。技术也像是内裤，得穿在身上，但不能逢人就扒出来展示一番。之所以会有鼓吹人人都是产品经理，却没有人推崇人人都是技术经理，人人都是架构师，人人都是算法工程师，就是这样的一个道理。 产品设计和技术研发是紧密关联的，很多技术人或产品人无法进步的瓶颈就在于坐井观天，固步自封。如果跳出技术的范畴去看产品，跳出产品的视野去谈技术，会有意外的收获。 技术并不需要钻研多深，能够满足产品的所有需求即可。产品也不需要功能多全，能够切实解决用户的某一痛点即可。在此基础之上，多余的部分，才能产出额外价值。 不要把用户当傻瓜其实对待客户，无论是当成傻瓜，还是当成上帝，都需要真诚。技术服务于产品，产品服务于用户，最终都是要让用户成为受益者。所以，做产品需要有同理心，不能搪塞，做可持续的产品，而不是一次性买卖。 哪怕用户真的是傻瓜，不是用来骗的，也应该要把用户当傻瓜宠。如果一个产品需要考验用户的记忆力，挑战用户的智商才能玩转，怎么会是一个好产品？一个连自己都不愿用的产品，拿出去卖的话可能都会挂不住脸。 迈出第一步，产品设计要合理。举个例子，大多数产品都会有按键，按键的个数和按键的功能都是有讲究的。比如为了缩减按键的个数，增加了每个按键的功能，导致有重叠，用户就需要靠记忆去记同一个按键，按多少下表示什么样的意义，就容易产生误操作。有一个很糟糕的设计案例就是一个按钮同时分到了四五种功能，有的要连按 5 次甚至 10 次，不仅浪费了记忆成本，还浪费了用户操作时间成本。显然，不能自诩这样的产品能够帮助用户培养耐心。 进阶，将合理的设计更贴心。比如常见的电子设备重置键大多是一个孔，需要用针或者其他尖细的东西捅进去才行。往往我们需要重置的时候，并不会用这么一样顺手的工具在身边。像苹果或一些手机，取 Sim 卡需要的卡针会随机赠送，但实际上可以再进一步，如果可以轻轻按压一下就自动弹出，不用任何工具，那将会更方便。当然其中也需要综合考虑一下美观、是否能够实现等因素。尽可能减少用户的麻烦，方便用户，为用户引导良好的行为和习惯，才会更受用户青睐。 说一千，道一万，如何做出一个号的产品，其实只有一句话，改变心智模式，抱有同理心，用户可能并不知道自己想要什么，但你却知道你能给什么。","link":"/posts/2016/thing-about-foolish/"},{"title":"Node.js阿里云接口(Aliyun API)SDK","text":"WAliyun 比官方 SDK 更好用的阿里云 SDK。 Minimum, Flexible, Scalable. 支持 Lazy Require。 安装和使用国际惯例： npm install waliyun --save 公共参数： var options = { AccessKeyId: \"xxxx-xxxx-xxxx-xxxx\", AccessKeySecret: \"xxxx-xxxx-xxxx-xxxx\", // 选填，不同接口类型注意版本日期 Version: \"2014-05-26\", // 选填 SignatureMethod: \"HMAC-SHA1\", Format: \"json\", SignatureVersion: \"1.0\", // 每次请求都会自动重新生成 SignatureNonce: Math.random(), Timestamp: new Date().toISOString(), }; ES5: var WALIYUN = require(\"waliyun\"); // 加载全部方法 var ecs = WALIYUN.ECS(options); // 或加载某些方法 var ecs = WALIYUN.ECS(options, [\"DescribeInstances\", \"DescribeInstanceStatus\"]); // 或加载某个方法 var ecs = WALIYUN.ECS(options, \"DescribeInstances\"); ecs .describeInstances({ RegionId: \"cn-hangzhou\", }) .then(function (instances) { // xxxx }); ES6: import { ECS } from \"waliyun\"; const ecs = ECS(options); // Within Async Func async () => { const instances = await ecs.describeInstances({ RegionId: \"cn-hangzhou\", }); // xxxx }; 已支持的接口Github 主页上检查最新版本: https://github.com/willin/waliyun CDNAPI 文档参考： https://help.aliyun.com/document_detail/cdn/api-reference/overview.html 云服务器 ECSAPI 文档参考： https://help.aliyun.com/document_detail/ecs/open-api/apisummary.html 云监控 MetricsAPI 文档参考： https://help.aliyun.com/document_detail/cms/API_References/New_Metric_OpenAPI_Reference/API_Guide.html 访问控制 RAMAPI 文档参考： https://help.aliyun.com/document_detail/ram/ram-api-reference/intro/intro.html 云数据库 RDSAPI 文档参考： https://help.aliyun.com/document_detail/rds/OpenAPI-manual/RDS-OpenAPI-Invoke/API-catalog.html 访问控制 STSAPI 文档参考： https://help.aliyun.com/document_detail/ram/sts-api-reference/intro.html","link":"/posts/2016/node-waliyun/"},{"title":"入手新域名js.cool","text":"这是一个溢价域名，注册的过程也算是一波三折。 在得知这个域名可注册之后，比较了几个域名服务商，最后选在了 Linost，价格为 255 元。 也算是老用户了，我的很多域名都是在这边注册的。付费成功之后发现域名状态一直在 Pending，提交工单一问，竟然说要给我退款，不让注册。唉，人情淡漠，何况老用户，抵不过那丁点金钱利益。 我个人感觉吧，无论怎么样的失误，都不应该让顾客承担。以后改价格是以后的事情，但当前价格错了并不是顾客造成的吧，仅一句退款，伤了几层心？！简直 Low 爆了。 后来，换了一家注册，也就只贵了 100 来块而已。 至此，已将所有域名从 Linost 转出，以后不再使用，也不再推荐他人。","link":"/posts/2016/js-cool/"},{"title":"JS 判断一个数是否为 2 的 N 次幂","text":"问题： 判断一个数(x)是否为 2 的 N 次幂，如果是，返回是 2^n 中的 n，如果不是返回 false 约束： x &lt;= 2^800 SB 青年版不用说，递归肯定是最 sb 的版本： function power2sb(x, n) { n = n || 0; if (x === 1) { return n; } if (x &lt; 1) { return false; } return power2sb(x / 2, n + 1); } 结果测试： console.log(power2sb(4)); // 2 console.log(power2sb(5)); // false console.log(power2sb(65536)); // 16 console.log(power2sb(Math.pow(2, 52) + 1)); // false console.log(power2sb(Math.pow(2, 53) + 1)); // false 实际结果：53 LowB 青年版低级循环版，与上一个版本半斤八两。 function power2lb(x) { var n = 0; while (x >= 1) { if (x === 1) { return n; } x = x / 2; n++; } return false; } 结果测试： console.log(power2lb(4)); // 2 console.log(power2lb(5)); // false console.log(power2lb(65536)); // 16 console.log(power2lb(Math.pow(2, 52) + 1)); // false console.log(power2lb(Math.pow(2, 53) + 1)); // false 实际结果：53 普通青年版function power2nm(x) { // 奇数肯定不是2的N次幂 if (x % 2 === 1) { return false; } // 总结规律 // 2^2=4 // 2^3=8 // 2^4=16 // 2^5=32 // 2^6=64 // 2^7=128 // 2^8=256 // 2^9=512 // 所以，个位不可能为 0 if (x % 10 === 0) { return false; } var n = 0; while (x >= 1) { if (x === 1) { return n; } x = x / 2; n++; } return false; } 文艺青年版位运算，无循环。 function power2fs(x) { // 一句话版本 return (x &amp; (x - 1)) === 0 ? (x - 1).toString(2).length : false; /* 解释： 1. (x &amp; ( x - 1)) === 0 先来寻找一下规律： 2^2=4 对应二进制为 100 2^3=8 1000 2^4=16 10000 所以， 2^N=1+N个0 2^N-1=N个1 100 &amp; 11 ---- 000 4 &amp; 3 = 0 1000 &amp; 111 ----- 0000 8 &amp; 7 = 0 2. (x-1).toString(2).length (8-1).toString(2) // 111, length: 3 (16-1).toString(2) // 1111, length: 4 或者还可以写成 x.toString(2).length - 1，结果一样 */ } 结果测试： console.log(power2fs(4)); // 2 console.log(power2fs(5)); // false console.log(power2fs(65536)); // 16 console.log(power2fs(Math.pow(2, 52) + 1)); // false console.log(power2fs(Math.pow(2, 53) + 1)); // false 实际结果：53 分割线上面 4 个版本都有一个共同的缺点，那就是只能计算到 2^52 次方。 JavaScript 中双精度类型最大 53 位，即 2^53-1 = 9007199254740991。 NB 青年版 &gt; 2016年7月6日更新 这题的原题来自： &lt;https://www.hackerrank.com/challenges/two-two&gt; ### 字符串直接匹配解题思路 ``` 统计2幂个数/字符串/ /统计2幂个数/字符串 1 1 0 01 1 2 0 02 1 4 0 04 1 8 0 08 2 16 0 016 2 32 0 032 2 64 0 064 4 128 0 0128 2 256 0 0256 3 512 0 0512 4 1024 0 01024 4 2048 0 02048 2 4096 0 04096 4 8192 0 08192 4 16384 0 016384 4 32768 0 032768 1 65536 0 065536 4 131072 0 0131072 6 262144 0 0262144 6 524288 0 0524288 4 1048576 0 01048576 4 2097152 0 02097152 5 4194304 0 4194304 ``` 通过该方式，先通过计算，得出一张类似上述的对照表。 通过查表法去快速推算结果。虽然这样能够通过系统评分的判断，但是实际上效率非常低下，这张对照表的产生花费大量的计算。 ### 大数计算 先把思路做一下调整，之前在做这个题的时候，总是在做字符串的遍历，查询，效率非常低下。 而实际上2^0到2^800一共只有801个组合，只需要将这801个出现的次数匹配出来，就是结果。 这里用到了一个库： https://github.com/peterolson/BigInteger.js 让JavaScript能够支持大数的计算。 最终满分通过答案： ```js var bigInt;//引入代码省略 function processData(input) { var data = input.split(&quot;\\n&quot;); for( var i=0; i &lt; data[0]; i++) { compute(data[i+1]); } } function compute(word) { var count = 0; var base = new bigInt(2); for( var i=0; i &lt;= 800; i++ ) { var s = base.pow(i).toString(10); var idx = 0, nextIdx = 0; do { idx = word.indexOf(s, nextIdx); if( idx != -1) { count++; } nextIdx = idx +1; } while( idx != -1); } console.log(count); } process.stdin.resume(); process.stdin.setEncoding(&quot;ascii&quot;); _input = &quot;&quot;; process.stdin.on(&quot;data&quot;, function (input) { _input += input; }); process.stdin.on(&quot;end&quot;, function () { processData(_input); }); ``` ![150](http://w3log.qiniudn.com/blog/two-two.png)","link":"/posts/2016/power-2/"},{"title":"浮云淡、解甲——二十七周岁沉思","text":"红尘若梦，沧海桑田，几人能看透？ Ranking - 排名前几天偶然间登录 MSDN 发现，几年没有再看过.NET 的东西了，排名竟然还没有掉出前 5% 。 不知道从什么时候开始，什么都要排名，支付宝昨天超越了几万名小伙伴，QQ 达人超越了全球百分之多少 QQ 用户…游戏有排名，学习有排名，工作有排名，消费也有排名，不消费也有排名…不管到哪里，都要被排排名次。很庆幸，每项排名基本上都在我满意的范围内。 QQ：等级 101，好友排名第 1，超越全球 98%用户。 QQ 空间：等级 148，好友排名第 1，全国排名 39833。 QQ 会员：SVIP8，好友排名第 1，全球排名 139369。 迅雷：等级 37，全球排名 444570。 MSDN：全球排名前 5%。 搜搜问问：[网页制作]领域专家，最高排名第 3。 HackerRank： 积分 5717，全球排名第 98。 Codewars： 1dan 大师，全球排名 90。 无论 Top 几，永远都只有几。而每个人，不管成功，还是失败，在努力着的，都是无可比拟的。所以，如果又有什么新的应用要上排名，我想我应该会很排斥。 如果非要问我有什么排行榜特别想上榜，我想应该是福布斯。很多人都在做价值的搬运工，却不知道该怎么去创造价值，传递价值以及获取价值。最近突发奇想，想闲扯点什么，写本小书，开门小课，名字就叫做《百万富翁之路》，去帮助更多人创造更大的价值，以及收获更多的价值。 Value - 价值之前写过一篇文章叫《不要当傻瓜》，提到了两种类型的傻瓜： 一种是一心钻技术，技术再深，在产品中无用武之地；另一种是一心构想理想化的产品，产品再宏大，无法被现有技术实现。 最近愈发觉得真的是这样，所以即便再喜欢技术，也需要广泛涉猎一些其他方面的知识。能创造多少价值，不在于技术有多高、知识有多广、思想有多深，而是在于能将多少能真真实实用到实际产品中。 这就是为什么有的人，明明技术很厉害，却只拿着微薄的薪水；而有的人看上去不学无术的，却屡建奇功。 我们能创造多少价值？答案我不知道，不过感觉上很少。创新是件很难的事情，也需要很深的积累，创造就更不用说了。 大多数情况，我们所做的工作，只是在做价值的搬运，将别人的技术引入到产品中运用，机械地重复着业务功能的堆彻。这个时候，我们并没有创造出价值，只是个价值的搬运工。所以会有码农这样形象生动的比喻，因为确实这样的工作与搬砖无差，只是体力劳动，而并非脑力劳动。 很多人，高估了自己的价值。想要做到无可取代，就必须与众不同。能做到别人做不到的事情，能做好别人不愿意做的事情，能捕捉到别人不在意的细节。 很多人，低估了自己的价值。反反复复如机械般度日，最会消磨人的意志，衰减人的热情。无法改变世界，可以从改变自己做起，从改变一个人做起。 或许，我们大多数人，无法颠覆这个世界，但至少，做点什么，改善一点点，并不难。 怎么样才是忙得有价值？在我看来， 忙 有这么三种： 假忙第一种情况，效率低，积压任务太多，所以有一种忙的假象。 懒癌是一种病，拖延症也是一种病。问题积压下来，感觉忙不过来了，只会让问题越积越多，恶性循环，问题解决不了，任务无法完成。 瞎忙第二种情况，没有大局观，如同猴子捡西瓜，顾此失彼。虽然也能做成一些事情，但很难做出更大的贡献来。没有时间做自己想做的事情，没有时间考虑怎么提升，勉强足够应付当前面临的任务和问题。 真忙真正的忙，不是什么都不顾只专注一个目标，也不是什么都做一个不放。 真正的忙，表面上并不忙，应该是在忙着提升效率，忙着减少问题，忙着避免重复的工作，以及忙着减少工作的投入却提高工作的产出。 如何实现价值输出最大化？进化自我进化是必须的，只有不断学习，才能保证持续的价值输出。 取舍 慈不带兵 义不养财 无论在哪方面，很多时候都是这样，有舍才有得。没有牺牲，就没有胜利。懂得取舍，才能成就未来。 实用主义二八定律，将 80%精力放在最有价值产出的 20%事情上，不为无谓的琐事纠缠。忠于事实，驾驭工具，不为条条框框牵绊。 Tomorrow is another day. 那就走吧 别忘了带上吉他和悲伤外壳 大概吧 我也可以是吟游诗人 繁华落尽，洗尽铅华。 不求做伟大的人，却要做大写的人，这就是我。","link":"/posts/2016/27th-birth/"},{"title":"Gitbook捐赠打赏插件","text":"Gitbook Donate Plugin 项目主页：https://plugins.gitbook.com/plugin/donate Config: { \"plugins\": [\"donate\"], \"pluginsConfig\": { \"donate\": { \"wechat\": \"例：/images/qr.png\", \"alipay\": \"http://blog.willin.wang/static/images/qr.png\", \"title\": \"默认空\", \"button\": \"默认值：Donate\", \"alipayText\": \"默认值：支付宝捐赠\", \"wechatText\": \"默认值：微信捐赠\" } } } 演示： http://money.js.cool/ 这是一本最近打算写的书，中文名叫《百万富翁之路》。 LICENSEMIT 贡献代码： https://github.com/willin/gitbook-plugin-donate 如果喜欢，千万别吝啬打赏~","link":"/posts/2016/gitbook-plugin-donate/"},{"title":"2016.06.20 我们都在乞讨","text":"每个人内心都有对金钱的进一步渴望，无关我们口袋里究竟有多少。 记得我刚开始写博客的时候，总想着怎么在页面上植入广告，卖文字链接，动不动就会跑到广告平台上看看今天的收入有多少。那时候没什么钱，每天多个一角半分都十分开心。 从开始建站以来，基本上在域名、VPS 上的投入林林总总加起来每年会有小几千的开销。而这么多年，通过广告所产生的收益不足其九牛一毛。工作了之后，没有太多精力折腾个人网站了，把广告移除之后有了很长一段时间的空窗期。而这段时间里，我一直也在想着，有没有什么方法能够将这部分的支出赚回来。 不劳而获与乞讨一分耕耘，一分收获。人不能奢望天上掉馅饼，也不能奢求有免费的午餐。世界上唯一可以不劳而获的就是贫穷，唯一可以无中生有的是梦想。 有的时候，在路边看到乞丐伸手，会不自觉地加快脚步走开。为什么一个有手有脚不靠自己的努力去赚钱，而却只是在伸手要钱？ 有的时候，不得不感慨，为什么只能凭双手赚钱，明明可以靠思想。但是时代不一样了，强制付费已经行不通了，只好可怜兮兮地挂出打赏的牌子。有的时候，也挺想做自己喜欢的事情，不论钱多钱少，开心就好。不过生活总有压力，所以有时有得锱铢必较，付出得有回报，即便口袋里有点闲钱，也需要未雨绸缪。所以我又将下面的打赏挂了出来，可惜粉丝经济体系告诉我，我这么做这必然是徒劳。无论回报多少，至少是种慰藉。 消费和投资举个栗子：一般而言，买一套房是消费，买第二套房是投资。因为当你只有一套房的时候，哪怕房价涨再高，与你并无关联。因为如果你将房子卖了，依然需要以高昂的价格再去购买，或者以或高或低但都不会有回报的价格去租。 在我理解中，消费和投资的主要区别是：消费出去的钱不会再回来，投资出去有回头钱。所以无论域名、服务器，我都不太想让其成为一种消费。当然域名有一定投资价值，但前提是你得放弃它的所有权。我所提倡的是理性消费，并且越早开始投资，越早开始有回报。 投资，分为很多种，能直接来钱的除了炒股还有买彩票。我不建议通过冒险的方式进行投资，人需要做自己有把握的事情，靠实力，不靠运气；拼努力，不拼爹。有点闲钱我宁可去买本书充实自己，也不愿意把致富寄托到赌运气上。 如果日子过得不舒坦，就把钱花到学习上吧。 我听过这么一句话： 人穷得时候，钱要花给别人；富的时候，钱要花给亲人和爱人。 现在想想觉得很有道理。先投资人情，后消费享乐。我感觉，穷的时候需要投资自己的未来，为自己的消费买单；而富裕了之后，则应该投资别人的未来，为别人的消费买单；才能充分将金钱得到更好的利用。 我们都在乞讨其实我们都在乞讨，然而，这并不应该成为我们立身之本。理性消费，合理投资。","link":"/posts/2016/we-beg/"},{"title":"CloudFlare配置SSL及性能优化","text":"CryptoSSL 默认值：Flexible适用于 Github、Coding.net 等之类的，没有采用 SSL 加密的源站。 Full / Full(Strict)适用于源站也有 SSL 证书，Strict 模式校验证书。 Automatic HTTPS Rewrites默认关闭，可以打开。 自动将页面中的 HTTP 资源改用 HTTPS 方式请求。 FirewallCloudflare 的验证码是最烦的东西了。 Security Level默认： Medium 可以改为 Essentially Off，减少验证码弹出。 Challenge Passage默认：半小时，可以改为一天。 Speed可以将 javascript、css、html 自动压缩全部勾选上。 Page Rules免费 3 条，只需要建一条即可将所有 HTTP 请求跳转到 HTTPS 上。 URL 如： http://*.willin.wang/* 选择 Always Use HTTPS 选项，保存并发布。","link":"/posts/2016/cloudflare-ssl/"},{"title":"MX Master Mac配置推荐","text":"Mac 下最好的鼠标，没有之一 从上到下依次为： 罗技 MX Master 雷蛇 炼狱蝰蛇 苹果 Magic Mouse 2 在 MX Master 之前，我一直以为 Magic Mouse 是最适合苹果的鼠标了。 雷蛇是在 Windows 下游戏用的，感觉比赛钛客稍微好一些。之前用过赛钛客无线（R.A.T 9）和赛睿有线的，在无驱动下表现比较差。驱动后游戏性能感觉一般，可能跟笔记本配置有关。 R.A.T 9 是我至今最记忆尤深，充电 4 小时，使用 1 小时。。。 当然，在 Mac 下我一直用的 Magic Mouse，主要是因为频繁使用手势。但有一个比较大的弊端，信号干扰，在公司 Wifi 特别多的情况下，经常会掉帧。另外就是，真的出了工作不能干别的事情了，比如游戏。 MX Master，面向大师级玩家的精准装备。可以设置多个手势，所有按键可编程，灵敏度高，在玻璃下也可精准定位。 配置我使用的配置： 中键：模式切换 配合 SmartShift 使用 我比较喜欢老式鼠标分段的感觉，也可以灵活切换为平滑滚动，无顿挫感。 灵敏度按钮：手势 左右桌面间切换，上下 Launchpad 和 Expose。 拇指按键：Launchpad这个按键我会频繁使用，所以拇指也设置了。 键盘推荐 图片倒置了，分别为： 左上： 樱桃 G80-1869HYNUS-2 红轴，已绝版 左下： 罗技 K780 右： ikbc Poker 3 茶轴 Cherry 红轴是我用过打字最轻松的键盘，打字速度快，声音也很温婉，就是容错率太低，经常按错。 罗技键盘可以跟鼠标公用 Options 配置软件，键位可编程。而且可以同时连接三个设备，快速切换，槽位足够同时放下两个平板电脑，而且支持蓝牙和无线 USB。 现在用的是 ikbc 的 Poker 3，好像现阶段到处都缺货了。按键均可编程，声音清脆，不会按错。不过没有方向键，得通过 fn+按键，需要一段时间适应。 上图是已经淘汰的 罗技 K480，该款小巧便携，适合随身携带。","link":"/posts/2016/mac-input-devices/"},{"title":"国内可备案域名后缀及价格列表","text":"456 个全。 更新时间 2017 年 2 月 26 日。 . 2017.08 更新一个 Node.js 写的爬虫脚本,可以一次性获得最新列表:https://github.com/willin/beian-domain 可备案域名列表 .ac .ac.cn .ad .ae .aero .af .ag .ah.cn .ai .al .am .an .ao .aq .ar .arpa .as .asia .asia .at .au .aw .ax .az .ba .bb .bd .be .bf .bg .bh .bi .biz .biz .bj .bj.cn .bm .bn .bo .br .br .bs .bt .bv .bw .by .bz .ca .cat .cc .cc .cd .cf .cg .ch .ci .citic .ck .cl .club .club .cm .cn .cn .cn.net .co .co.ao .co.id .co.il .co.jp .co.kr .co.nz .co.th .co.uk .co.uk .co.za .com .com .com.au .com.bo .com.br .com.cn .com.co .com.de .com.do .com.ec .com.eg .com.hk .com.mo .com.my .com.nz .com.nz .com.ph .com.py .com.ru .com.sa .com.sc .com.sg .com.tw .com.vn .coop .cq.cn .cr .cu .cv .cx .cy .cz .de .dj .dk .dm .do .dz .ec .edu .edu.cn .edu.hk .edu.mo .ee .eg .er .es .et .eu .fi .fj .fj.cn .fk .fm .fo .fr .ga .gb .gd .gd.cn .ge .gf .gg .gh .gi .gl .gm .gn .gov .gov.cn .gp .gq .gr .gs .gs.cn .gt .gu .gw .gx.cn .gy .gz.cn .ha.cn .hb.cn .he.cn .hi.cn .hk .hk .hk.cn .hl.cn .hm .hn .hn.cn .hr .ht .hu .id .ie .il .im .in .info .ink .int .io .iq .ir .is .it .je .jl.cn .jm .jo .jobs .jp .js.cn .jx.cn .ke .kg .kh .khb.ru .ki .km .kn .kp .kr .kr.com .kw .ky .kz .la .lb .lc .li .lk .ln.cn .lr .ls .lt .lu .lv .ly .ma .mc .md .me .mg .mh .mil .mil.cn .mk .ml .mm .mn .mo .mo.cn .mobi .mp .mq .mr .ms .mt .mu .museum .mv .mw .mx .my .mz .na .name .name .nc .ne .net .net .net.au .net.cn .net.ru .net.tw .nf .ng .ni .nl .nm.cn .no .np .nr .nu .nx.cn .nz .om .or.id .org .org .org.au .org.cn .org.pg .org.ru .org.uk .pa .pe .pf .pg .ph .pk .pl .pm .pn .pr .pro .ps .pt .pw .pw .py .qa .qh.cn .re .ren .ren .ro .rs .ru .rw .sa .sb .sc .sc.cn .sd .sd.cn .se .sg .sh .sh.cn .shop .si .site .sj .sk .sl .sm .sn .sn.cn .so .sohu .sohu .sr .st .su .sv .sx.cn .sy .sz .tc .td .tel .tel .tf .tg .th .tj .tj.cn .tk .tl .tm .tm .tn .to .to .top .top .tp .tr .travel .tt .tv .tv .tw .tw .tw.cn .tz .ua .ug .uk .us .uy .uz .va .vc .ve .vg .vi .vip .vip .vn .vu .wang .wang .wang .wf .ws .xin .xin .xj.cn .xn–1qqw23a .xn–3bSt00M .xn–3bSt00M .xn–55Qw42G .xn–55Qw42G .xn–55Qx5D .xn–55Qx5D .xn–55qx5d.hk .xn–55qx5d.xn–j6w193g .xn–6qQ986B3xL .xn–6qQ986B3xL .xn–czRu2D .xn–fiQs8S .xn–fiQs8S .xn–fiQz9S .xn–fiQz9S .xn–fiq64b .xn–io0A7I .xn–io0A7I .xn–j6w193g .xn–od0AlG .xn–od0AlG .xn–ses554g .xn–vuq861b .xn–xhq521b .xn–zfR164B .xn–zfR164B .xn—czru2d .xyz .xyz .xz.cn .ye .yn.cn .yt .za .zj.cn .zm .zw .中信 .中国 .中國 .中文网 .佛山 .信息 .公司 .公司.cn .公司.hk .公司.香港 .公益 .公益.cn .公益.中国 .公益.中國 .其它 .其它.cn .商城 .商标 .在线 .广东 .我爱你 .手机 .政务 .政务.cn .政务.中国 .政务.中國 .政務 .政務.cn .政務.中国 .政務.中國 .網絡 .網絡.cn .网址 .网店 .网络 .网络.cn .集团 .香港 查询地址： http://www.miibeian.gov.cn/basecode/query/queryDomain.action 可备案域名价格（从低到高） .网店,1 .商标,2 .pw,14 .site,16 .ink,24 .top,26 .gs,28 .vip,29 .cn,38 .cx,38 .cn,38 .ren,38 .in,45 .vc,48 .wang,49 .cc,58 .cc,58 .club,60 .com,60 .xyz,64 .biz,68 .name,68 .us,68 .info,68 .信息,69 .net,69 .net,69 .com,69 .org,75 .xin,86 .pro,88 .mobi,88 .me,88 .asia,88 .com.co,98 .biz,99 .com.tw,108 .tw,108 .hk,118 .gov.cn,120 .ee,128 .lc,138 .com.hk,158 .co,159 .ws,159 .shop,168 .la,178 .广东,180 .佛山,180 .tv,180 .bz,198 .tv,199 .gg,298 .公司,320 .网络,320 .中国,320 .cd,400 .sc,688 .tm,990 .tm,990 数据来源： 西部数码 授人以鱼不如授人以渔抓取代码： [].slice .call(document.querySelectorAll(\"tr\")) .slice(5, document.querySelectorAll(\"tr\").length - 3) .map((tr) => `'${tr.querySelector(\".by2\").innerText.trim()}',`) .join(\"\\n\"); 得到可备案域名列表数组如下： const ba = [ \".ac\", \".ac.cn\", \".ad\", \".ae\", \".aero\", \".af\", \".ag\", \".ah.cn\", \".ai\", \".al\", \".am\", \".an\", \".ao\", \".aq\", \".ar\", \".arpa\", \".as\", \".asia\", \".asia\", \".at\", \".au\", \".aw\", \".ax\", \".az\", \".ba\", \".bb\", \".bd\", \".be\", \".bf\", \".bg\", \".bh\", \".bi\", \".biz\", \".biz\", \".bj\", \".bj.cn\", \".bm\", \".bn\", \".bo\", \".br\", \".br\", \".bs\", \".bt\", \".bv\", \".bw\", \".by\", \".bz\", \".ca\", \".cat\", \".cc\", \".cc\", \".cd\", \".cf\", \".cg\", \".ch\", \".ci\", \".citic\", \".ck\", \".cl\", \".club\", \".club\", \".cm\", \".cn\", \".cn\", \".cn.net\", \".co\", \".co.ao\", \".co.id\", \".co.il\", \".co.jp\", \".co.kr\", \".co.nz\", \".co.th\", \".co.uk\", \".co.uk\", \".co.za\", \".com\", \".com\", \".com.au\", \".com.bo\", \".com.br\", \".com.cn\", \".com.co\", \".com.de\", \".com.do\", \".com.ec\", \".com.eg\", \".com.hk\", \".com.mo\", \".com.my\", \".com.nz\", \".com.nz\", \".com.ph\", \".com.py\", \".com.ru\", \".com.sa\", \".com.sc\", \".com.sg\", \".com.tw\", \".com.vn\", \".coop\", \".cq.cn\", \".cr\", \".cu\", \".cv\", \".cx\", \".cy\", \".cz\", \".de\", \".dj\", \".dk\", \".dm\", \".do\", \".dz\", \".ec\", \".edu\", \".edu.cn\", \".edu.hk\", \".edu.mo\", \".ee\", \".eg\", \".er\", \".es\", \".et\", \".eu\", \".fi\", \".fj\", \".fj.cn\", \".fk\", \".fm\", \".fo\", \".fr\", \".ga\", \".gb\", \".gd\", \".gd.cn\", \".ge\", \".gf\", \".gg\", \".gh\", \".gi\", \".gl\", \".gm\", \".gn\", \".gov\", \".gov.cn\", \".gp\", \".gq\", \".gr\", \".gs\", \".gs.cn\", \".gt\", \".gu\", \".gw\", \".gx.cn\", \".gy\", \".gz.cn\", \".ha.cn\", \".hb.cn\", \".he.cn\", \".hi.cn\", \".hk\", \".hk\", \".hk.cn\", \".hl.cn\", \".hm\", \".hn\", \".hn.cn\", \".hr\", \".ht\", \".hu\", \".id\", \".ie\", \".il\", \".im\", \".in\", \".info\", \".ink\", \".int\", \".io\", \".iq\", \".ir\", \".is\", \".it\", \".je\", \".jl.cn\", \".jm\", \".jo\", \".jobs\", \".jp\", \".js.cn\", \".jx.cn\", \".ke\", \".kg\", \".kh\", \".khb.ru\", \".ki\", \".km\", \".kn\", \".kp\", \".kr\", \".kr.com\", \".kw\", \".ky\", \".kz\", \".la\", \".lb\", \".lc\", \".li\", \".lk\", \".ln.cn\", \".lr\", \".ls\", \".lt\", \".lu\", \".lv\", \".ly\", \".ma\", \".mc\", \".md\", \".me\", \".mg\", \".mh\", \".mil\", \".mil.cn\", \".mk\", \".ml\", \".mm\", \".mn\", \".mo\", \".mo.cn\", \".mobi\", \".mp\", \".mq\", \".mr\", \".ms\", \".mt\", \".mu\", \".museum\", \".mv\", \".mw\", \".mx\", \".my\", \".mz\", \".na\", \".name\", \".name\", \".nc\", \".ne\", \".net\", \".net\", \".net.au\", \".net.cn\", \".net.ru\", \".net.tw\", \".nf\", \".ng\", \".ni\", \".nl\", \".nm.cn\", \".no\", \".np\", \".nr\", \".nu\", \".nx.cn\", \".nz\", \".om\", \".or.id\", \".org\", \".org\", \".org.au\", \".org.cn\", \".org.pg\", \".org.ru\", \".org.uk\", \".pa\", \".pe\", \".pf\", \".pg\", \".ph\", \".pk\", \".pl\", \".pm\", \".pn\", \".pr\", \".pro\", \".ps\", \".pt\", \".pw\", \".pw\", \".py\", \".qa\", \".qh.cn\", \".re\", \".ren\", \".ren\", \".ro\", \".rs\", \".ru\", \".rw\", \".sa\", \".sb\", \".sc\", \".sc.cn\", \".sd\", \".sd.cn\", \".se\", \".sg\", \".sh\", \".sh.cn\", \".shop\", \".si\", \".site\", \".sj\", \".sk\", \".sl\", \".sm\", \".sn\", \".sn.cn\", \".so\", \".sohu\", \".sohu\", \".sr\", \".st\", \".su\", \".sv\", \".sx.cn\", \".sy\", \".sz\", \".tc\", \".td\", \".tel\", \".tel\", \".tf\", \".tg\", \".th\", \".tj\", \".tj.cn\", \".tk\", \".tl\", \".tm\", \".tm\", \".tn\", \".to\", \".to\", \".top\", \".top\", \".tp\", \".tr\", \".travel\", \".tt\", \".tv\", \".tv\", \".tw\", \".tw\", \".tw.cn\", \".tz\", \".ua\", \".ug\", \".uk\", \".us\", \".uy\", \".uz\", \".va\", \".vc\", \".ve\", \".vg\", \".vi\", \".vip\", \".vip\", \".vn\", \".vu\", \".wang\", \".wang\", \".wang\", \".wf\", \".ws\", \".xin\", \".xin\", \".xj.cn\", \".xn--1qqw23a\", \".xn--3bSt00M\", \".xn--3bSt00M\", \".xn--55Qw42G\", \".xn--55Qw42G\", \".xn--55Qx5D\", \".xn--55Qx5D\", \".xn--55qx5d.hk\", \".xn--55qx5d.xn--j6w193g\", \".xn--6qQ986B3xL\", \".xn--6qQ986B3xL\", \".xn--czRu2D\", \".xn--fiQs8S\", \".xn--fiQs8S\", \".xn--fiQz9S\", \".xn--fiQz9S\", \".xn--fiq64b\", \".xn--io0A7I\", \".xn--io0A7I\", \".xn--j6w193g\", \".xn--od0AlG\", \".xn--od0AlG\", \".xn--ses554g\", \".xn--vuq861b\", \".xn--xhq521b\", \".xn--zfR164B\", \".xn--zfR164B\", \".xn—czru2d\", \".xyz\", \".xyz\", \".xz.cn\", \".ye\", \".yn.cn\", \".yt\", \".za\", \".zj.cn\", \".zm\", \".zw\", \".中信\", \".中国\", \".中國\", \".中文网\", \".佛山\", \".信息\", \".公司\", \".公司.cn\", \".公司.hk\", \".公司.香港\", \".公益\", \".公益.cn\", \".公益.中国\", \".公益.中國\", \".其它\", \".其它.cn\", \".商城\", \".商标\", \".在线\", \".广东\", \".我爱你\", \".手机\", \".政务\", \".政务.cn\", \".政务.中国\", \".政务.中國\", \".政務\", \".政務.cn\", \".政務.中国\", \".政務.中國\", \".網絡\", \".網絡.cn\", \".网址\", \".网店\", \".网络\", \".网络.cn\", \".集团\", \".香港\", ]; 排序： ba.sort() .map((x) => `* ${x}`) .join(\"\\n\"); 域名注册价格排序获取域名列表和续费价格： const list = [].slice .call( document.getElementById(\"domainPriceListTbody\").getElementsByTagName(\"tr\") ) .reduce((result, item) => { const items = item.getElementsByTagName(\"td\"); if (items.length > 1) { result.push([items[0].innerText, parseFloat(items[2].innerText)]); } return result; }, []); // 打印查看： list.map((x) => `${x[0]},${x[1]}`).join(\"\\n\"); /* .com,60 .net,69 .org,75 .cn,38 .info,68 .cc,58 .tv,180 .biz,68 .gov.cn,120 .mobi,88 .name,68 .tw,108 .hk,118 .cd,400 .us,68 .asia,88 .me,88 .in,45 .co,159 .ws,159 .pro,88 .pw,14 .tm,990 .wang,49 .club,60 .la,178 .xyz,64 .top,26 .website,14 .ren,38 .space,14 .press,16 .host,16 .wiki,38 .ink,24 .design,88 .site,16 .ooo,145 .love,78 .tech,16 .email,168 .today,168 .company,168 .tips,168 .life,198 .media,198 .world,198 .photos,168 .city,168 .zone,198 .land,198 .house,155 .bike,198 .marketing,198 .cool,198 .works,198 .tools,198 .domains,198 .cards,198 .tax,278 .plus,155 .show,198 .gold,498 .estate,198 .camera,278 .construction,198 .guru,278 .ventures,278 .equipment,168 .bid,6 .trade,7 .webcam,11 .cricket,11 .science,9 .review,11 .date,7 .faith,11 .accountant,11 .download,11 .loan,6 .racing,11 .win,6 .link,49 .click,38 .property,188 .help,26 .pics,118 .flowers,148 .sexy,129 .lol,18 .audio,79 .photo,159 .diet,128 .hosting,158 .gift,26 .cars,14 .party,7 .money,198 .online,16 .center,168 .expert,278 .solutions,168 .photography,168 .services,198 .support,168 .holiday,278 .watch,198 .cash,198 .chat,198 .school,198 .toys,278 .team,168 .cab,198 .cafe,198 .fish,198 .town,198 .style,198 .dog,278 .run,17 .pub,148 .live,58 .news,58 .video,58 .rip,88 .band,58 .engineer,158 .gives,158 .haus,158 .market,158 .software,158 .vet,158 .sale,58 .best,680 .ceo,680 .wtf,198 .fyi,99 .lawyer,198 .taipei,149 .cx,38 .rent,338 .men,7 .sex,580 .bar,468 .studio,108 .fans,478 .college,468 .auction,158 .black,258 .blue,98 .pink,98 .red,75 .kim,88 .cn.com,56 .com.tw,108 .gg,298 .car,15 .auto,15 .family,188 .feedback,268 .wine,368 .vin,299 .bet,999 .pet,128 .vc,48 .gs,28 .ee,128 .com.co,98 .fund,288 .business,168 .coffee,158 .credit,498 .network,168 .sc,688 .bz,198 .lc,138 .mom,188 .mba,158 .net.co,88 .game,2 .vip,29 .store,37 .xin,86 .ltd,98 .shop,168 .work,48 .fit,89 .yoga,89 .games,98 .com.hk,158 .clothing,158 .group,98 .com,69 .net,69 .中国,320 .cc,58 .tv,199 .biz,99 .cn,38 .tm,990 .公司,320 .网络,320 .商标,2 .世界,48 .广东,180 .佛山,180 .信息,69 .网店,1 */ 筛选可备案后缀，并按价格由低到高排序： list.filter((x) => ba.indexOf(x[0]) !== -1).sort((x, y) => x[1] - y[1]); // 打印结果 list .filter((x) => ba.indexOf(x[0]) !== -1) .sort((x, y) => x[1] - y[1]) .map((x) => `* ${x[0]},${x[1]}`) .join(\"\\n\"); 全文完。","link":"/posts/2017/beian-domain-list/"},{"title":"前端阅读体验优化-GitBook自动换肤","text":"新键盘入手，HHKB Professional 2 Type-S 通过侦听显示器亮度，或根据当地时间，实现自动换肤换色。 DeviceLightEventwindow.addEventListener(\"devicelight\", function (e) { var lux = e.value; if (lux &lt; 50) { document.body.className = \"dim\"; } if (lux >= 50 &amp;&amp; lux &lt;= 1000) { document.body.className = \"normal\"; } if (lux > 1000) { document.body.className = \"bright\"; } }); 兼容性https://developer.mozilla.org/zh-CN/docs/Web/API/DeviceLightEvent 桌面： Firefox 22.0 (Gecko 22.0) (Mac OS X only) 移动： Firefox 15.0 (Gecko 15.0) CSS Media-Query@media (light-level: dim) { /* 暗光环境 */ } @media (light-level: normal) { /* 正常光环境 */ } @media (light-level: washed) { /* 明亮环境 */ } 兼容性https://developer.mozilla.org/zh-CN/docs/Web/CSS/@media/light-level Working Draft，暂无支持 根据时间示例： 暗光环境： [20,21,22,23,0,1,2,3,4,5]正常环境： [6,7,8,17,18,19]明亮环境： [9,10,11,12,13,14,15,16] 一般大概是这样，也可以根据地域和季节进行调整。 时间判断，加入 class，GitBook 插件源码： https://github.com/willin/gitbook-plugin-autotheme 查看演示： https://leader.js.cool/","link":"/posts/2017/reading-ux-gitbook/"},{"title":"2017.02.22 团队·经济·团队经济","text":"第一次听到 团队经济 这个词是在 LOL 中。 何谓 团队经济 ？与个人经济类似，表示的是团队整体经济水平。 今天简单聊聊 团队、经济、团队经济 相关的话题。 团队经济团队经济有多重要呢？ 从游戏的角度来讲，毕竟 LOL 是团队竞技游戏，双拳难敌四手，一个再强，能发挥的作用是有限的。 比如这样的，虽然是全场经济最好的（13k），但依然免不了失败的下场。只顾自己爽，还嫌队友坑。先富带后富的口号，大多数时候都会忘诸脑后。 就联系到工作上，我们所考虑的，大多是如何将个体的经济效益最大化。 我见识过很多画的大饼，却没有见过兑现的样子。有的时候画大饼是一件好事，领导愿意对你画大饼，是对你现有价值的认可，但却要推迟兑现而许下的承诺。但如果连大饼都不愿意画给你，那么，你就要衡量一下你在团队里是不是该有些提升了。 总是会听到谈创业精神、团队责任感之类的云云。事业心人人都有，但给不给你就两说。如果你的事业造福的是自己，那团队的事业只是你个人的事业；反之，那你的事业就是大家的事业。其实很多时候，我们每个人都只是在单干，团队对于我们的意义只是从别人的身上压榨剩余价值而提高自我的效益。这样会导致队友渣如狗，自身效益又得不到质的提升的恶性循环。 总结一点就是——平衡。团队利益不只是属于少部分人，而是应该雨露均沾（但并非大锅饭），这样每个人参与其中，才能有主人翁的意识。 经济团队经济拆开，分别是团队和经济。先从经济说起，作为外行来看经济，我只关注两个点：市场和效益。有市场=可以做；有效益=可以扩大规模。 效益=收入-成本。 作为团队，将人员成本开销的缩减作为提高效益的手段是绝不可取的。因为收入恒定的情况下，通过压缩成本产生的效益是有限的，而且成本的缩减往往又会对收入的提高有着负面的反馈。 前面的观点可以察觉到，我的主张是适当提高人员成本的开销，那应该靠什么推动效益的扩大？答案当然是收入。 对外，可以锱铢必较，因为多赚 1 分钱都是为团队多创造 1 分的效益。而在团队内部，你每克扣的 1 分钱，都是在挥霍成员对于团队的信任和感情。又想马儿不吃草，又想马儿快快跑，这是不切实际的。善待团队，才能激发更大的创造力。 有激情，有动力，有创造力，还愁没有更大程度的效益么？ 经济形势的预测和把控不是纸上谈兵，跃然纸上的往往只能停留在纸上。术业有专攻，做好自己的本分，一点点去撬动市场就行了。 团队团队好不好，关键看领导。 我们都见过不少团队人员流动很大，员工很容易就能重新招一个替换掉，但是往往团队的瓶颈不在于下面做事的员工。对于一个团队最好的鸡汤，就是不灌鸡汤。空谈理想，不如踏实实干；空画大饼，不如全身心利他。 创新最重要的方面是人员的流动与人才的吸收。大多数团队在流动这方面都做的很好，根本不介意你走还是留，但是人才的吸收和挽留就没什么好举措了。认可团队成员价值，激发团队成员更大的价值，逐步形成良性的反馈、循环。不积跬步，无以至千里。 很多团队并不是不好，只是野心有余而诚意不足。","link":"/posts/2017/team-profit/"},{"title":"优雅地使用平板进行远程OS X编码开发","text":"没有 OS X 平板(iPad 是 ios 系统)这个问题一直困扰着我. 正所谓,工欲善其事必先利其器. 准备 一台平板(iPad/Surface 或者其他) 一台苹果(Mac Mini/Macbook Pro 或者其他) 一台路由器(需支持动态域名解析,如花生壳),后续我会完善动态域名解析功能 配置电源选项 根据上图开启 唤醒, 关闭 睡眠 sudo pmset -a autopoweroff 0 sudo pmset -a standby 0 配置路由器IP 地址分配通过 mac 地址进行绑定,分配固定 ip. 一般是在: 路由设置 -&gt; 上网设置 -&gt; 静态 IP 端口转发或 DMZ如果路由支持 DMZ 主机功能,则不需要进行端口转发.直接将本机设置 DMZ 主机即可. 端口转发的话,设置 1234 端口(参考下文 js 代码). 配置动态域名解析方法 1: 路由器+花生壳注册花生壳域名 路由器配置花生壳 很简单,填入用户名密码和域名. 注意下面的两个时间我填的都是 10 分钟. 方法 2: DNS 定时轮询 本章节待完善 参考资料: DNSPod: https://github.com/willin/wqcloud 设置唤醒应用a http = require('http'); const { execSync } = require('child_process'); http.createServer((req, res) => { res.writeHead(200, { 'Content-type': 'application/json' }); try { execSync('caffeinate -u -t 1'); res.end('{status:1}'); } catch (e) { res.end('{status:0}'); } }).listen(1234); 假如你的动态解析域名是 willin.wang 如果电脑进入睡眠了,用手机访问下面的地址,即可进行唤醒. http://willin.wang:1234/ 祭出神器TeamViewer, 配置无人值守和轻松访问. 享受吧.","link":"/posts/2017/pad-remote-coding/"},{"title":"Docsify画图建模Mermaid插件支持","text":"先上图 引入 Mermaid在 head 中加入 css: &lt;link rel=\"stylesheet\" href=\"//unpkg.com/mermaid/dist/mermaid.min.css\" /> 在 底部 引用 js: &lt;script type=\"text/javascript\" src=\"//unpkg.com/mermaid/dist/mermaid.min.js\" >&lt;/script> 配置文件修改window.$docsify = { // ... plugins: [ function (hook, vm) { hook.ready(function () { mermaid.initialize({ startOnLoad: false }); }); hook.doneEach(function () { mermaid.init(undefined, \".mermaid\"); }); }, ], markdown: { renderer: { code: function (code, lang) { var html = \"\"; if ( code.match(/^sequenceDiagram/) || code.match(/^graph/) || code.match(/^gantt/) ) { html = '&lt;div class=\"mermaid\">' + code + \"&lt;/div>\"; } var hl = Prism.highlight( code, Prism.languages[lang] || Prism.languages.markup ); return ( html + '&lt;pre v-pre data-lang=\"' + lang + '\">&lt;code class=\"lang-' + lang + '\">' + hl + \"&lt;/code>&lt;/pre>\" ); }, }, }, }; 解释一下,两个关键步骤: markdown 代码解析器markdown: { renderer: { code: function(code, lang) { var html = ''; // 搜索 mermaid 代码 if(code.match(/^sequenceDiagram/) || code.match(/^graph/) || code.match(/^gantt/)){ // 生成一个 mermaid 图表的容器 html = '&lt;div class=\"mermaid\">' + code + '&lt;/div>'; } // 源码自带的 Prism 高亮插件 var hl = Prism.highlight(code, Prism.languages[lang] || Prism.languages.markup) // 将图表的容器添加到代码之前 return html + '&lt;pre v-pre data-lang=\"' + lang + '\">&lt;code class=\"lang-' + lang + '\">' + hl + '&lt;/code>&lt;/pre>' } } } 自定义插件plugins: [ function (hook, vm) { hook.ready(function () { // 类似 jQuery.ready 初始化 mermaid, 禁用自动渲染 mermaid.initialize({ startOnLoad: false }); }); hook.doneEach(function () { // 每个页面渲染完成后手动渲染 mermaid 图表 mermaid.init(undefined, \".mermaid\"); }); }, ]; 最后再补一张甘特图: Mermaid 支持: 流程图 序列图 甘特图 而且语法结构非常简单,值得推荐.","link":"/posts/2017/docsify-mermaid-plugin/"},{"title":"iPad 开发&#x2F;高效应用列表","text":"原则： 提高工作效率，拒绝时间浪费。 所以该列表会随时更新，将一些不用的 App 删除，新增一些最近发现的有意思的 App。 开发工具/代码编辑器 Prompt: 价格 98 元， 远程 SSH 连接 Termius: 免费， 远程 SSH 连接 Teamviewer: 个人免费， 远程桌面工具 GoCoEdit: 价格 68 元 Coda: 价格 168 元 开发工具分别比较了： GoCoEdit： 唯一一款可以直接在 localhost（80 端口） 进行预览的， 可以存 iCloud Drive Coda： 本地+远程 FTP/SSH，集成了终端，可以在 localhost:[站点端口] 预览 Buffer Editor： 价格 30 元，可以支持 Git 项目 Clone 和 Push， 其他啥也干不了 Textastic： 价格 60 元，和 GoCoEdit 差不多，但界面风格有点简陋 总结下来虽然每个都号称支持 N 多种语言，但实际也就前端开发稍微省心点，因为有预览么。。。但不能用 Webpack 之类的打包工具也是不太方便真实项目开发的。 前端用来写一些小的 Demo 挺顺手。 最后保留了两个使用，如果 Coda 能支持 iCloud Drive 存储，则更倾向 Coda，目前得用 GoCoEdit 与电脑进行同步。 接下来将用 iPad 写第一个项目——重构 willin.wang 网站， 然后是 js.cool 网站。 数据库/缓存客户端 Navicat for MySQL: 价格较高，128 元 RedisFly: 价格 24 元， 不支持 SSH 效率工具 duet: 价格 68 元. 把 iPad 当做电脑屏幕 Workflow: 价格 30 元. 工作流 Notes Plus: 价格 68 元. 最好的笔记工具， 配合 Apple Pencil 钢笔手写效果完美 Things: 价格 68 元. GTD 工具， 苹果三个平台都有（但都需要各自购买） Mindjet Maps: 免费， 脑图工具 文档/阅读工具 Dash: 离线文档 MWeb: 价格 60 元(目前 30)， Markdown 编辑器， 可以与 Mac OS(价格 98 元)下的进行同步 Reeder： 价格 68 元， 在 Mac OS 下用习惯了， 不错的 RSS 阅读工具 Inoreader： 免费 MarginNote Pro： 价格 60 元，可以直接做笔记的阅读软件，能够生成脑图，我用来看技术书籍，且可以与 Mac OS 端（两个版本，分别 68 元和 249 元）同步 微信读书 多看阅读 把 MWeb 给删去了， 虽然我现在也在用。 主要是没别的选择，而且这个东西 Bug 太多，实在对不起这个价格。现在普遍的一个现象就是 iOS 应用价格很高，但功能性太差。像这个软件几年下来最基本的 Bug 都没有改完，作者还固步自封，以为自己写了个宝，真是坑了个爹。话说最多也就三个月吧，一个人就能搞出这样一款软件，而且还能做得更好，有兴趣的小伙伴可以尝试一下。需要技术支持的可以联系我。 自从用了 FarBox，感觉春天又来了。 唯一的遗憾是没有 iOS 客户端，但比较好的是 Mac OS 客户端非常给力，而且有 WebEditor 稍作弥补。","link":"/posts/2017/ipad-apps/"},{"title":"创意分享：Redis 客户端","text":"我在 iPad 上买过两个： Redis Touch（6元） RedisFly （24元） 但这两个都不支持 SSH 登录，让我很尴尬。 第一步，分析：实现设想没考虑原生方式，原因很简单，不会。 最初的设想是直接封装一个 Hybrid App，用 js 实现。 但搜索了一圈，好像没有什么方案可以直接在前端去连接 ssh 服务器的。 那么就需要服务器作为中转，将客户端的请求采用 ssh 连接进行透传，然后保持连接，并抛出 RESTful 或 Websocket 接口。 第二步，应用架构最终用户使用的网络传输过程大概是这样子的： 客户端-&gt;应用服务器: 普通接口调用 应用服务器-&gt;用户服务器: ssh 连接 redis Note right of 应用服务器: 抛出接口 用户服务器--&gt;应用服务器: 返回结果 应用服务器--&gt;客户端: 返回结果 第三步，筹备TODO List： 设计UI原型 服务器端 ssh 连接 服务器端接口设计 开发客户端上层应用 进行测试发布 服务器优化，以允许更高并发客户端连接 参考资料： Medis （Electron 封装的 OS X 客户端）： https://github.com/luin/medis Node.js 实现原理： https://stackoverflow.com/questions/38689707/connecting-to-remote-ssh-server-via-node-js-html5-console P.S. 由于工作的原因，我个人可能并没有太多的精力去参与所有【创意 iDeas】分类下的项目。如果你对这个项目有兴趣，可以微博或Github上与我联系，或者直接略过我自行去完成该APP的开发。","link":"/posts/2017/redis-app/"},{"title":"创意分享：Github&#x2F;Coding 聚合客户端","text":"为什么需要一个聚合的客户端举个栗子，之前微博类产品风靡的时候，有很多类似的产品，如：腾讯微博、新浪微博、饭否、Twitter……那么，就可能会发生这样的一个现象，手机上装了一大堆类似的 APP，然后用个文件夹放到一起。 实际上大多数也确实这么做了。切换不同的 APP，去刷内容不同但本质相近的微博消息。 同样，目前我在我的手机上各自装了 Coding.net 和 GitHub（GitPoint）客户端。 而最近，我在入手 iPad Pro 之后，发现 Cdoing 并没有对应的 iPad 客户端，从而萌生了这样的一个点子。 第一步，分析从技术实现的角度来讲，并不复杂。 因为它们都是代码管理平台，功能相近，有着许多共同之处，随便列举一些： 都是通过 OAuth 进行鉴权 大多数都功能重叠，如：用户，项目，组织（团队），关注，ISSUE…… 第二步，设计接口逻辑架构 graph TD APP[应用层]-->INTERFACE(封装统一接口) INTERFACE-->|抛出参数一致|CODING[封装Coding API] INTERFACE-->|抛出参数一致|GITHUB[封装Github API] 以 Star 一个项目为例根据操作的类型进行判断，接口参数里带入类型即可。 Action-&gt;Interface: 关注github\\nwillin/leader.js.cool Interface-&gt;Github: 调用关注 Note right of Github: 抛出接口一致 Interface--&gt;Action: 返回结果 Action-&gt;Interface: 关注coding\\nwillin/leader.js.cool Interface-&gt;Coding: 调用关注 Interface--&gt;Action: 返回结果 第三步，筹备TODO List： 整理完整的功能清单（包括相同功能和两个平台差异性功能） 设计 UI 原型（两者的客户端可以选择一个作为主体风格，或者重新设计） 封装底层接口 开发上层应用 进行测试发布 P.S. 由于工作的原因，我个人可能并没有太多的精力去参与所有【创意 iDeas】分类下的项目。如果你对这个项目有兴趣，可以微博或 Github 上与我联系，或者直接略过我自行去完成该 APP 的开发。","link":"/posts/2017/github-coding-app/"},{"title":"VSCode配置Webpack路径提示及智能跳转","text":"Webpack 配置resolve: { modules: [ 'node_modules', path.resolve(__dirname, '../src') ], extensions: ['.js', '.vue', '.json', '.css'], alias: { vue$: 'vue/dist/vue.esm.js', public: path.resolve(__dirname, '../public'), component: path.resolve(__dirname, '../src/component'), config: path.resolve(__dirname, '../src/config'), lib: path.resolve(__dirname, '../src/lib'), i18n: path.resolve(__dirname, '../src/i18n'), store: path.resolve(__dirname, '../src/store') } } Eslint 选配需要安装插件 eslint-import-resolver-webpack。进行配置： settings: import/resolver: webpack: config: &quot;build/webpack.config.js&quot; 智能路径提示需要安装插件Path Intellisense，并且进行配置（项目或者全局的settings.json）： \"path-intellisense.mappings\": { \"config\": \"${workspaceRoot}/src/config\", \"lib\": \"${workspaceRoot}/src/lib\", \"store\": \"${workspaceRoot}/src/store\", \"i18n\": \"${workspaceRoot}/src/i18n\", \"component\": \"${workspaceRoot}/src/component\" } 代码智能跳转项目根目录创建 jsonfig.json： { \"include\": [ \"./src/**/*\" ], \"compilerOptions\": { \"baseUrl\": \".\", \"paths\": { \"component/*\": [\"src/component/*\"], \"config/*\": [\"src/config/*\"], \"lib/*\": [\"src/lib/*\"], \"i18n/*\": [\"src/i18n/*\"], \"store/*\": [\"src/store/*\"] } } } ￼ 按住 ⌘command就可以跳转到对应代码了。","link":"/posts/2017/vs-code-webpack-intelligence/"},{"title":"愉快地使用 ElementoryOS 5 玩耍","text":"双系统的安装首先，由于 Windows 10 安装分区的时候，占用了3个主分区（MBR、Recovery和系统），所以不能使用 Legacy + MBR 的方式进行引导，因为 MBR 只能有 4 个主分区。 那么，就需要将磁盘改为 GPT。然后通过 UEFI 进行引导。但试了很多种方法，无法做出 UEFI 引导的 Windows 10 安装U盘（因为有一个 4.1GB的 install.wim 文件，无法使用 FAT32 格式，而我测试用的 DELL 台式机不支持 NTFS 格式的 UEFI引导），所以制作一个 “微PE” 的 U盘进行安装。 注意： 市面上的这种 PE 工具，内置了 N 多垃圾软件，安装完系统后自动安装。 BIOS 设置： 关闭 Secure Boot 关闭 Legacy 引导，使用 UEFI 引导 安装过程不再赘述，比较简单。 Elementory安装的版本为 Juno 5（Beta），基于Ubuntu 18.04。 缺陷先说一些我发现的问题： 1.多屏兼容性我用了两块屏幕，一块28寸飞利浦4k屏（设置为默认屏幕），一块Dell 24英寸（旋转90°用于竖屏看代码）。但开机的时候始终以Dell的屏幕作为主屏（可能因为它的分辨率低？），且登录框无法自动或通过键盘获得焦点，所以我只能以自动登录来避免这个问题。 2. 蓝牙兼容性我一开始打算使用 罗技M558 鼠标的，但是每次重启无法自动连接，手动连接也有异常，每次都得重新配对。 后来换成了 罗技 Master 2s，但由于没有 Linux 驱动，所以比较难用。 3. 没有 ALT 键不确定是不是键盘的问题（HHKB Pro2 Type-S），ALT键位的实际作用有点类似 OS X系统下的 command （⌘）键。 4. 状态栏图标似乎是篡改过的，安装的软件都没有图标，比如 SS、输入法等，不太方便。而且状态栏的时间显示格式无法修改，显示为 一，9月24 12:32 这种格式。左上角始终为全局应用程序，不会变为当前应用的菜单。 软件推荐 钉钉： https://github.com/nashaofu/dingtalk 微信： https://github.com/geeeeeeeeek/electronic-wechat Konsole： 替代原生 Terminal Typora： 文本编辑 Conky： 系统监控，不兼容 问题：没有 Release 文件 404 Not Found [IP: xxxxx] 正在读取软件包列表... 完成 E: 仓库 “xxxxxxxxx bionic Release” 没有 Release 文件。 N: 无法安全地用该源进行更新，所以默认禁用该源。 N: 参见 apt-secure(8) 手册以了解仓库创建和用户配置方面的细节。 解决方案： 打开 /etc/apt/sources.list.d/ 下对应的源配置。 将 bionic 改成该源有支持的。 对应版本： 18.04：bionic 17.10：artful 16.04：xenial 14.04：trusty","link":"/posts/2018/elementoryos/"},{"title":"剩暖渣、初瘦——三十一周岁再话","text":"王初瘦今年三十一了。 岁月像一把杀猪刀，初瘦快要破碎他再瘦的梦。初瘦总会自嘲说，心宽体胖。可是只有傻子才看不出来吧，他那些沉稳，是被现实磨平的棱角。 虽然我也很了解初瘦，但还是很难去形容他究竟是一个怎样的人，最后总结出来三个字——剩、暖、渣。 剩 三十有一，孤苦无依。没错，我应该尊称初瘦为大龄剩男了。 等公交的人，等的是去往正确目的地的那辆车，哪怕晚点了，也要等。而不是在某个时间点，看哪辆进站，就上哪辆车。 或许吧，这可以成为他狡辩的借口。可正常而言，到这个岁数他还没有结婚，我觉得他多多少少还是……很有问题的。书没读好，钱没挣到，没让父母过得好，喜欢的人也没留住，就连深夜安慰自己都不会。 他对我说过好多次——“这人生呐，有点大风大浪不算什么，哪能没点坎坷呢，如果什么事情都一帆风顺的，那这样的生活，应该也挺没劲的吧。” 有了房子不一定就有家，该剩下还是剩下。用两手抠都快数不过来初瘦有过几段感情经历了，如果他还是个精神小伙儿，或许勉强还可以在狐朋狗友面前炫耀一番，但都一三十多岁的老大叔了，只能把失败一词套在他身上了。像初瘦他这个年纪的朋友，大多孩子都会打酱油了。面对周围诸多「人生赢家」，没有成家已经很失败了。立业成家，成家立业。这孑然一身倒也不算什么，相较于一事无成、一无所有，他反反复复在低谷中挣扎着。 越聪明就越悲伤，悲伤随着聪明而增长。——《安德烈·卢布廖夫》 剩下来的原因，以及他一事无成的原因，我无从得知。我知道的一点，就是并不是他不努力。相反的，他已经比很多人更努力了。他告诉过我，苦难并不会让人成功，人应该吃奋斗的苦，而不是生活的苦。 emmmm，但是生活喂来给他，不吃也得吃啊。房贷、车贷、工作，不给他喘息的余地。祝愿他早一点摆脱这样的窘境吧。 暖 初瘦他吖，曾经也是个看见姑娘都会脸红，到后来却能随口开车的人。没毕业那会儿，像他这样庸俗的人，从不喜欢装深沉，直来直往，不拘小节。慢慢地，话少了，沉稳了，细致了。 年轻的时候，他确实脾气臭，不细致，不会体谅人，还没有耐心。经历过失去，才更懂得珍惜。没有经历过撕心裂肺的伤痛，应该就不会知道要收起锋利的羽翼，温柔善待；没有过义无反顾奋不顾身的尝试，应该就不会知道细节对成败的决定性因素，细致耐心。没有人天生温柔，也许失去和错过，成就了成长。 他属于乐观的人，同时也是个很没有安全感的人，一个矛盾的综合体。或许只是死要面子活受罪，他总是想把最好的一面示人，哪怕是亲近的人。不想被怜悯，无论多苦，能自己扛住的，就自己默默承受。像蜡烛，炙热，奋不顾身。 所谓，一见钟情只不过是见色起意，所谓日久生情不过是权衡利弊。 难怪初瘦这人，仅第一印象就足以沉沦，付出而不计得失。听初瘦自己说，他泪点很低，虽然很少有人见到。他的原话形容自己“常在别人的故事里，流着自己的眼泪。”他向来很认真，所以我也就没有问过他，认真会不会也输得很惨。 也还有人说初瘦冷漠无情，其实我能理解，毕竟不是中央空调，他也没啥必要对谁都发光发热。我也不大明白，像他这样莫名其妙的人，会不会有人心疼？ 渣 上学的那会儿，初瘦坚持会写写文字。他总是说自己是个没有秘密的人，心里藏不住事情，也不愿意两面三刀。很多琐碎的情绪都能从他的文字中觉察，喜怒哀乐也全部挂在脸上。 不忘初心，方得始终；初心易得，始终难守。我也不记得从什么开始，也许是一瞬间，也或许是潜移默化中，他偏离了原有的人设。如那些放荡不羁的人儿，都和这世界潦草地和解了。这应该并不算多渣，只不过向现实低了头，很多时候言不由衷，身不由己。 都说双子最多情，但不限于初瘦一个人吧，渣男都一个样，恨不得见一个爱一个。 又有说双子看似多情，其实是最薄情的。 表面上初瘦是个没心没肺的渣男，轻描淡写地跟我提过被辜负的往事，也闭口不谈辜负过的罪孽。我的感觉应该是他罪孽深重，活该单身吧。反正他从来不肯面对现实，承认自己很渣就是了。他苦笑着跟我说——“情非得已。” 过几天就是他的生日了，我问他，对现状有什么看法。他回了这么几个字：“认输，但不服输。” 呵呵，奔四的老年人。 逃避不一定躲得过，面对不一定最难过。不求做伟大的人，却要做大写的人，这就是他，他是王初瘦。","link":"/posts/2020/31st-birth/"},{"title":"愉快地使用 Manjaro 21 玩耍","text":"使用的版本为 KDE Plasma 桌面版本。 配置国内镜像源sudo pacman-mirrors -i -c China -m rank 通过手动的方式配置 ArchLinux 源： sudo pacman -Sy vim sudo vim /etc/pacman.conf 在底部插入： [archlinuxcn] SigLevel = Never Server = https://mirrors.ustc.edu.cn/archlinuxcn/$arch #这里是中科大，清华源为： Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch 保存后执行： sudo pacman -Syy sudo pacman -Sy archlinuxcn-keyring sudo pacman -Syyu 搜狗输入法安装sudo pacman -Sy fcitx-im fcitx-configtool yay base-devel yay --aururl \"https://aur.tuna.tsinghua.edu.cn\" --save yay -S fcitx-sogoupinyin 新增一个配置文件 ~/.pam_environment： GTK_IM_MODULE=fcitx QT_IM_MODULE=fcitx XMODIFIERS=@im=fcitx 注销，重新登录即可。 安装 OhMyZshsudo pacman -Sy zsh yay -S autojump 由于未翻墙访问 raw.githubcontent.com 会有一些问题。 手动下载： https://github.com/ohmyzsh/ohmyzsh/blob/master/tools/install.sh 然后执行： chmod +x install.sh ./install.sh 默认 zsh 需要注销或重启生效。 推荐主题：powerlevel10k sudo pacman -S nerd-fonts-complete git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k 修改 .zshrc： ZSH_THEME=\"powerlevel10k/powerlevel10k\" 插件推荐git clone git://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $ZSH_CUSTOM/plugins/zsh-syntax-highlighting echo \"source $ZSH_CUSTOM/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\" >> ${ZDOTDIR:-$HOME}/.zshrc 依然修改.zshrc： # 搜索并添加 plugins=(zsh-autosuggestions autojump git) Colorls 插件： 文档参考： https://github.com/athityakumar/colorls sudo pacman -S ruby gem install colorls 依然修改配置.zshrc： #底部添加，记得修改对应的 PATH 路径 export PATH=$PATH:/home/willin/.local/share/gem/ruby/3.0.0/bin alias vi=\"vim\" alias ls=\"colorls\" alias ll=\"colorls -l\" alias la=\"colorls -a\" alias lg=\"colorls --gs -at\" 机场我使用的是 DlerCloud。 安装 ShellClash： https://github.com/juewuy/ShellClash/blob/master/README_CN.md 参考博客文章，用 root 用户进行全局安装。 sysctl -w net.ipv4.ip_forward=1 vim /etc/sysctl.conf # 加入 net.ipv4.ip_forward=1 sysctl -p /etc/sysctl.conf 常用软件安装一个字，爽。 yay -S visual-studio-code-bin yay -S typora yay -S google-chrome yay -S com.dingtalk.deepin yay -S keybase-bin yay -S mongodb-compass yay -S redis-desktop-manager 其他问题终端字体过宽KDE 版本中不存在该问题，可跳过。 sudo pacman -Sy wqy-bitmapfont wqy-zenhei 修改 Home 下的目录为英文vim ~/.config/user-dirs.dirs 修改： XDG_DESKTOP_DIR=\"$HOME/Desktop\" XDG_DOWNLOAD_DIR=\"$HOME/Download\" XDG_TEMPLATES_DIR=\"$HOME/Templates\" XDG_PUBLICSHARE_DIR=\"$HOME/Public\" XDG_DOCUMENTS_DIR=\"$HOME/Documents\" XDG_MUSIC_DIR=\"$HOME/Music\" XDG_PICTURES_DIR=\"$HOME/Pictures\" XDG_VIDEOS_DIR=\"$HOME/Videos\" 然后运行： cd ~ mv 公共 Public mv 模板 Templates mv 视频 Videos mv 图片 Pictures mv 文档 Documents mv 下载 Download mv 音乐 Music mv 桌面 Desktop 注销或重启生效。 Docker 需要 sudo 才能执行安装# Pacman 安装 Docker sudo pacman -S docker # 启动docker服务 sudo systemctl start docker # 查看docker服务的状态 sudo systemctl status docker # 设置docker开机启动服务 sudo systemctl enable docker 设置当前用户权限# 如果还没有 docker group 就添加一个 sudo groupadd docker # 将自己的登录名(${USER} )加入该 group 内。然后退出并重新登录就生效啦 sudo gpasswd -a ${USER} docker # 重启 docker 服务 sudo systemctl restart docker # 切换当前会话到新 group 或者重启 X 会话 # 注意，这一步是必须的，否则因为 groups 命令获取到的是缓存的组信息，刚添加的组信息未能生效，所以 docker images 执行时同样有错。 newgrp - docker Manjaro 很多时候涉及到权限的设置，都需要注销或者重启后才能生效。。 设置镜像源sudo vim /etc/docker/daemon.json 插入镜像源： { \"registry-mirrors\": [\"https://docker.mirrors.ustc.edu.cn\"] } 然后重启 Docker 服务。 其他组合键设置 xkbmapsudo 修改： /usr/share/X11/xkb/symbols/pc default partial alphanumeric_keys modifier_keys xkb_symbols \"pc105\" { // 加入这行， 表示将 CapsLock 改为 Ctrl + Shift 组合键 key &lt;CAPS> { [ SetMods(modifiers=Shift+Control) ] }; 然后执行： setxkbmap 按键替换设置 xmodmap单键测试在用户目录创建 .Xmodmap clear lock clear control keycode 66 = Control_L add control = Control_L Control_R 此处是将 CapLock 改为 Ctrl 键。 然后执行： xmodmap .Xmodmap","link":"/posts/2021/manjaro/"},{"title":"模块化开发、容器化开发","text":"使用微服务架构或 Mono Repo 架构中的问题拆包不合理一、类型的定义（如 Typescript 中的 interface、type，或者请求/响应，参数/返回等 DTO），不应当放置到一个底层的通用包中。这样会导致一处业务修改，联动项目代码、底层包代码需要修改，然后需要发布包、更新依赖版本等，非常麻烦。 同时，大部分的类型定义是不具备复用的可能的。比如数据库 Schema，会有一些多余的不可操作的字段，如 id、时间戳、状态等，所以在 create 方法中，传入的参数，可能是 Partial&lt;SchemaEntity&gt;（也可能会有一些生成字段之类的特殊情况）。在接口请求参数中，更是会和数据库 create 方法的参与差异很大，比如说密码，用户输入是明文，存到数据库中是密文 + SALT。等等。返回值亦是如此。 为减少重复代码量和修改，和保证结构的稳定性，可以参考 TypeScript Handbook 中的一些小技巧： Type Manipulation： 从类型创建类型、泛型、 keyof、 typeof、索引访问、条件类型、映射类型、模板文字类型 Utility Types： Partial&lt;Type&gt;、Pick&lt;Type, Keys&gt;、Omit&lt;Type, Keys&gt;、 Exlude&lt;Type, ExludedUnion&gt;、Parameters&lt;Type&gt;、ReturnType&lt;Type&gt; 等 二、先设计，再封装，后拆分业务未设计完善时，切忌着急先封装成包。这样一旦发生调整，将会从下往上每一层都得做变更。 人无远虑必有近忧。能在设计过程中解决掉的问题，绝对不要拖到实现过程中迭代。设计中需要遵守的几点原则： MVP 原则即最简化可实行产品原则，按照以下顺序进行设计和实现：明确需求，满足基本需求，保证稳定性，完善需求，扩展需求，提高性能。 冰冻三尺非一日之寒。一口也吃不成一个胖子。无论多复杂的业务模块，都是拆分成了一个个小的子任务，每一个子任务模块设计完备了，进行扩展和整合。 分治原则压力下方，分而治之。不要在一个点上去耗费大量的性能和资源。往往在架构设计的时候，只有一到两个数据中心，数据中心将会处理大量的数据和请求，所以会承担很大的性能压力。那么， 能在区域服务器上进行的处理和运算，没有必要扔到数据中心去进行；能在网关上进行的处理和运算，没有必要扔到服务器上去进行；能在客户端上进行的处理和运算，没有必要扔到网关上去运行。 举个简单的例子，一台负载均衡器下的服务器配置可能是双核心，4GB 内存， 这一台服务器，能够承载的并发是 10 万级，而目前的智能终端(比如智能手机)，可能都是 4 核 8 核， 8GB 内存之类的，实际上已经有很强大的运算能力了。足够承担起很大一部分的数据预处理和初筛的工作。所以，可以将服务器的压力逐层进行下放，让下面连接的服务器，网关和终端各自承担一部分运算处理工作，充分利用各个存储运算单元。 函数定义不合理一、 不推荐使用多参数方式定义一个函数。 示例： export functionA(arg1: string, arg2: number, arg3: string, arg4: number): void; // 或 class ClassA { constructor(arg1: string, arg2: number, arg3: string, arg4: number) { } } 推荐的做法为，单一对象参数，或 id + 单一对象参数的方式。 示例： // Class 示例 import { plainToClass } from \"class-transformer\"; import { validateSync } from \"class-validator\"; export class BaseDto { // eslint-disable-next-line constructor(data: any) { // 仅当作为基类，不确定输入类型时使用 any if (data) { // eslint-disable-next-line @typescript-eslint/no-explicit-any Object.assign(this, plainToClass(this.constructor as any, data)); const errors = validateSync(this, { dismissDefaultMessages: true, stopAtFirstError: true, whitelist: true, forbidNonWhitelisted: true, }); if (errors?.length > 0) { throw new Error(\"Validation Error Occurred\"); } } } } // 方法示例 import { BaseDto, Validator, Transform, DB } from \"@dao/base\"; import { IsEmail, IsMobilePhone, IsEnum, IsOptional, IsString, } from \"class-validator\"; import { UserEntity, UserRole } from \"../entity\"; import { getUserByUid } from \"./get_user_by_uid.dao\"; import { checkUserExist } from \"./check_user.dao\"; import { UserDaoErr } from \"../error\"; // 定义好单一对象参数的类型 export type UpdateUserDto = Partial&lt; Pick&lt;UserEntity, \"role\" | \"username\" | \"email\" | \"mobile\" | \"passwd\"> >; // 如果需要数据校验，可以做一层封装 // 尤其是在接口请求、调用底层方法（如数据库操作）时，非常必要 class Model extends BaseDto implements UpdateUserDto { @IsEnum(UserRole) @IsOptional() role?: UserRole; @Transform.ToLowerCase() @Validator.IsEnglishName() @IsOptional() username?: string; @IsEmail() @Transform.ToLowerCase() @IsOptional() email?: string; @IsMobilePhone(\"zh-CN\") @Transform.ToLowerCase() @IsOptional() mobile?: string; @IsString() @IsOptional() @Transform.ToPassHash() passwd?: string; } /** * 修改用户信息 * @param {string} uid 用户 id * @param {UpdateUserDto} data 单一对象参数，定义好类型 * @returns {boolean} */ export async function updateUser( id: string, data: UpdateUserDto ): Promise&lt;boolean> { // 此处为 class-transformer + class-validator 校验 const item = new Model(data); // 如果上一步校验不通过，则会抛出错误 const user = await getUserByUid(id); // 省略校验判断，荣用户名、手机号是否存在 // ... return DB.updateById(id, item, DB.DBTABLE.User); } 二、 做向下兼容。 这就是单一对象变量的好处，删除一个字段和新增一个字段，都会更加方便。 示例： export class CreateUserDto { username: string; // @deprecated 公司字段已弃用 company?: string; // 废弃字段，只需要改成 optional 即可。 // 即便不做向下兼容的操作，直接把该字段删除就可以了 // 手机号 new in v1.0.1 mobile?: string; // 如果 Client 没有升级，则不会传这个字段，所以也设置成 optional } export function createUser(user: CreateUserDto) { if (user.company) { // 如果影响业务，则抛出异常 logger.info(\"该字段已经废弃，请停止使用，并升级到 v1.0.1\"); } if (!user.mobile) { // 兼容性操作，如需，下面是乱写的 // eslint-disable-next-line no-param-reassign user.mobile = null; } // 省略代码 } 容器化开发本地环境模块化所有东西都在独立的容器内运行，如果不用，停止状态下只占用磁盘空间，出现了问题也就直接删除重建即可。 以 MySQL 为例，以前都是安装在本地，所有应用程序共用，只有一个版本，并且一旦出了问题，卸载重装也是很麻烦的事情。 现在只需要一个 Docker Compose 文件定义好启动即可，示例： # docker-compose.yml version: \"3\" services: mysql: image: mysql container_name: mysql command: # MySQL8的密码验证方式默认是 caching_sha2_password，但是很多的连接工具还不支持该方式 # 就需要手动设置下mysql的密码认证方式为以前的 mysql_native_password 方式 --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci restart: unless-stopped environment: MYSQL_ROOT_PASSWORD: root # root用户的密码 # MYSQL_USER: user # 创建新用户 # MYSQL_PASSWORD: user_password # 新用户的密码 ports: - 3306:3306 volumes: - ./data:/var/lib/mysql - ./conf:/etc/mysql/conf.d - ./logs:/logs network_mode: bridge 配置好用户名密码、字符集、设定当前目录下来存放数据、日志和配置文件。 简单的几个命令进行操作： # 启动 docker-compose up -d # 停止 docker-compose down # 删除所有数据 rm -rf data conf logs # 重新创建镜像 docker-compose up -d --force-recreate 更多实用的容器参考项目： https://github.com/WhiteMatrixTech/dev-in-docker 模块化运行以 Node.js 为例。 推荐镜像： node:16-alpine （如非特殊情况，使用当前最新的 alpine 版本） 更多镜像参考官方 Hub： https://hub.docker.com/_/node/ 本地调试TBD. 镜像发布参考 Node.js 官方文档：把一个 Node.js 应用程序 Docker 化 写一个 Dockerfile： FROM node:16-alpine LABEL maintainer &quot;Willing Wang&lt;i@sh.gg&gt;&quot; COPY . /app WORKDIR /app RUN yarn RUN yarn build EXPOSE 3000 CMD [ &quot;node&quot;, &quot;dist/server.js&quot; ] # 打包镜像 docker build . -t &lt;username>/node-app # 运行镜像 docker run -p 3000:3000 &lt;username>/node-app 模块化开发TBD.","link":"/posts/2021/microservice-dev/"}],"tags":[{"name":"love","slug":"love","link":"/tags/love/"},{"name":"life","slug":"life","link":"/tags/life/"},{"name":"career","slug":"career","link":"/tags/career/"},{"name":"node.js","slug":"node-js","link":"/tags/node-js/"},{"name":"thought","slug":"thought","link":"/tags/thought/"},{"name":"suggestion","slug":"suggestion","link":"/tags/suggestion/"},{"name":"user","slug":"user","link":"/tags/user/"},{"name":"birth","slug":"birth","link":"/tags/birth/"},{"name":"wordpress","slug":"wordpress","link":"/tags/wordpress/"},{"name":"plugin","slug":"plugin","link":"/tags/plugin/"},{"name":"php","slug":"php","link":"/tags/php/"},{"name":"unix","slug":"unix","link":"/tags/unix/"},{"name":"iis","slug":"iis","link":"/tags/iis/"},{"name":"sql","slug":"sql","link":"/tags/sql/"},{"name":"security","slug":"security","link":"/tags/security/"},{"name":"codeigniter","slug":"codeigniter","link":"/tags/codeigniter/"},{"name":"asp.net","slug":"asp-net","link":"/tags/asp-net/"},{"name":"jquery","slug":"jquery","link":"/tags/jquery/"},{"name":"ajax","slug":"ajax","link":"/tags/ajax/"},{"name":"ubuntu","slug":"ubuntu","link":"/tags/ubuntu/"},{"name":"mac","slug":"mac","link":"/tags/mac/"},{"name":"ruby","slug":"ruby","link":"/tags/ruby/"},{"name":"ide","slug":"ide","link":"/tags/ide/"},{"name":"none","slug":"none","link":"/tags/none/"},{"name":"markdown","slug":"markdown","link":"/tags/markdown/"},{"name":"git","slug":"git","link":"/tags/git/"},{"name":"js","slug":"js","link":"/tags/js/"},{"name":"algorithm","slug":"algorithm","link":"/tags/algorithm/"},{"name":"logic","slug":"logic","link":"/tags/logic/"},{"name":"performance","slug":"performance","link":"/tags/performance/"},{"name":"hexo","slug":"hexo","link":"/tags/hexo/"},{"name":"mood","slug":"mood","link":"/tags/mood/"},{"name":"public welfare","slug":"public-welfare","link":"/tags/public-welfare/"},{"name":"study","slug":"study","link":"/tags/study/"},{"name":"product","slug":"product","link":"/tags/product/"},{"name":"tech","slug":"tech","link":"/tags/tech/"},{"name":"api","slug":"api","link":"/tags/api/"},{"name":"sdk","slug":"sdk","link":"/tags/sdk/"},{"name":"aliyun","slug":"aliyun","link":"/tags/aliyun/"},{"name":"domain","slug":"domain","link":"/tags/domain/"},{"name":"gitbook","slug":"gitbook","link":"/tags/gitbook/"},{"name":"dns","slug":"dns","link":"/tags/dns/"},{"name":"ssl","slug":"ssl","link":"/tags/ssl/"},{"name":"front-end","slug":"front-end","link":"/tags/front-end/"},{"name":"docsify","slug":"docsify","link":"/tags/docsify/"},{"name":"ipad","slug":"ipad","link":"/tags/ipad/"},{"name":"app","slug":"app","link":"/tags/app/"},{"name":"thought tech","slug":"thought-tech","link":"/tags/thought-tech/"}],"categories":[{"name":"diary","slug":"diary","link":"/categories/diary/"},{"name":"design","slug":"design","link":"/categories/design/"},{"name":"career","slug":"career","link":"/categories/career/"},{"name":"idea","slug":"idea","link":"/categories/idea/"},{"name":"note","slug":"note","link":"/categories/note/"},{"name":"hack","slug":"hack","link":"/categories/hack/"},{"name":"other","slug":"other","link":"/categories/other/"},{"name":"dev","slug":"dev","link":"/categories/dev/"},{"name":"CheriShe","slug":"CheriShe","link":"/categories/CheriShe/"}]}